{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/AngaragT/Desktop/Portfolio/src/FunComponent/Hatchways/Main.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Expand from \"./Expand\";\nimport Tag from \"./Tag\";\n\nfunction Main() {\n  _s();\n\n  const [students, setStudents] = useState([]);\n  const [search, setSearch] = useState('');\n  const [searchtag, setSearchTag] = useState(''); // const [array, setArray] = useState()\n\n  useEffect(() => {\n    fetch('https://api.hatchways.io/assessment/students').then(response => response.json()).then(response => {\n      // response['tags'] = []\n      // setArray(response)\n      response.students.map(c => response.students[response.students.indexOf(c)]['tags'] = ['']);\n      setStudents(response.students);\n    });\n  }, []); // const handleChange = (e) =>{\n  //     setTag(e.target.value)\n  // }\n\n  const handleTags = (taglist, index) => {\n    // array.tags = taglist\n    // console.log(array)\n    students[index].tags = taglist;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"display_box\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"name_search\",\n      type: \"text\",\n      placeholder: \"Search by name\",\n      onChange: e => setSearch(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"tag_search\",\n      type: \"text\",\n      placeholder: \"Search by tag\",\n      onChange: e => setSearchTag(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), students.filter(student => student.tags.join().includes(searchtag) && (student.firstName.toLowerCase().includes(search) + student.lastName.toLowerCase().includes(search) || student.firstName.toLowerCase().concat(\" \" + student.lastName.toLowerCase()).includes(search))).map(current => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"display_content\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"profile_pic_student\",\n        src: current.pic,\n        alt: \"profile_pic\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"name_student\",\n        children: [current.firstName, \" \", current.lastName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"email\",\n        children: [\"Email: \", current.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"company\",\n        children: [\"Company: \", current.company]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"skill\",\n        children: [\"Skill: \", current.skill]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"average\",\n        children: [\"Average: \", current.grades.reduce((prev, current) => parseInt(prev, 10) + parseInt(current, 10)) / current.grades.length, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Expand, {\n        grades: current.grades,\n        index: students.indexOf(current)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Tag, {\n        handleTags: handleTags,\n        index: students.indexOf(current),\n        currenttag: current.tags\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 25\n      }, this)]\n    }, current.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Main, \"5mQAPEkUM0lSr4Q0lD3WTixLW7Y=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/Users/AngaragT/Desktop/Portfolio/src/FunComponent/Hatchways/Main.js"],"names":["React","useEffect","useState","Expand","Tag","Main","students","setStudents","search","setSearch","searchtag","setSearchTag","fetch","then","response","json","map","c","indexOf","handleTags","taglist","index","tags","e","target","value","filter","student","join","includes","firstName","toLowerCase","lastName","concat","current","pic","email","company","skill","grades","reduce","prev","parseInt","length","id"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport Expand from \"./Expand\"\nimport Tag from \"./Tag\"\n\nfunction Main(){\n    const [students, setStudents] = useState([])\n    const [search, setSearch] = useState('')\n    const [searchtag, setSearchTag] = useState('')\n    // const [array, setArray] = useState()\n    useEffect(() => {\n        fetch('https://api.hatchways.io/assessment/students')\n            .then(response => response.json())\n            .then((response )=>{\n                // response['tags'] = []\n                // setArray(response)\n               \n                response.students.map(c=>response.students[response.students.indexOf(c)]['tags']=[''])\n                setStudents(response.students)\n                \n            })\n\n        \n    },[])\n\n    // const handleChange = (e) =>{\n    //     setTag(e.target.value)\n    // }\n    const handleTags = (taglist, index) =>{\n        // array.tags = taglist\n        // console.log(array)\n      \n        students[index].tags = taglist\n   \n    }\n\n    return(\n        <div className = \"display_box\">\n            <input className = \"name_search\" type = \"text\" placeholder = \"Search by name\" onChange = {e =>setSearch(e.target.value)}/>\n            <input className = \"tag_search\" type = 'text' placeholder = 'Search by tag' onChange = {e =>setSearchTag(e.target.value)}/>\n\n{/* \n                {students.filter(student => student.firstName.toLowerCase().includes(search) + student.lastName.toLowerCase().includes(search) \n                || student.firstName.toLowerCase().concat(\" \"+student.lastName.toLowerCase()).includes(search) \n                || student.tags.includes(searchtag)) */}\n\n                {/* {console.log(students.filter(student => student.firstName.toLowerCase().includes(search) + student.lastName.toLowerCase().includes(search)|| student.firstName.toLowerCase().concat(\" \"+student.lastName.toLowerCase()).includes(search)))} */}\n\n                {/* {console.log(students.filter(student => student.tags.join().includes(searchtag)))} */}\n                {students.filter(student => student.tags.join().includes(searchtag)\n                && (student.firstName.toLowerCase().includes(search)+ student.lastName.toLowerCase().includes(search)\n                || student.firstName.toLowerCase().concat(\" \"+student.lastName.toLowerCase()).includes(search))\n                ).map((current)=>\n                    <div key = {current.id} className = \"display_content\">\n                        <img className = \"profile_pic_student\"src = {current.pic} alt = \"profile_pic\"/> \n                        <h1 className = \"name_student\">{current.firstName} {current.lastName}</h1>\n                        <p className = 'email'>Email: {current.email}</p>\n                        <p className = 'company'>Company: {current.company}</p>\n                        <p className = 'skill'>Skill: {current.skill}</p>\n                        <p className = 'average'>Average: {current.grades.reduce((prev,current)=>parseInt(prev,10)+parseInt(current,10))/current.grades.length}%</p>\n                        <Expand grades = {current.grades} index = {students.indexOf(current)}/>\n\n                        <Tag handleTags = {handleTags} index = {students.indexOf(current)} currenttag = {current.tags}/>\n                        {/* <p>{tag}</p>\n                        <input type = 'text' onChange = {handleChange} placeholder = \"Add a tag\"/> */}\n                    </div>)}\n\n        </div>\n    )\n\n\n\n}\nexport default Main"]},"metadata":{},"sourceType":"module"}