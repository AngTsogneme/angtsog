{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/AngaragT/Desktop/my-react-projects/Portfolio/src/FunComponent/Conversions/OtherConversions.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Button, Form } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction OtherConversions() {\n  _s();\n\n  const [conversion, setConversion] = useState('');\n  const [amount, setAmount] = useState('');\n  const [result, setResult] = useState('');\n  const [placeholder, setPlaceholder] = useState('Mile');\n  const [placeholder2, setPlaceholder2] = useState('Foot');\n  const [placeholder3, setPlaceholder3] = useState('Inches');\n  const [placeholder4, setPlaceholder4] = useState('Mile');\n  const [placeholder5, setPlaceholder5] = useState('Gallon');\n\n  const getAmount = event => {\n    event.preventDefault();\n\n    if (conversion === 'MLFT') {\n      if (placeholder === 'Mile') {\n        setResult(amount * 5280);\n      } else {\n        setResult(amount / 5280);\n      }\n    } else if (conversion === 'FtIn') {\n      if (placeholder2 === 'Foot') {\n        setResult(amount * 12);\n      } else {\n        setResult(amount / 12);\n      }\n    } else if (conversion === 'InCm') {\n      if (placeholder3 === 'Inches') {\n        setResult(amount * 2.54);\n      } else {\n        setResult(amount / 2.54);\n      }\n    } else if (conversion === 'MKm') {\n      if (placeholder4 === 'Mile') {\n        setResult(amount * 1.609);\n      } else {\n        setResult(amount / 1.609);\n      }\n    } else if (conversion === 'GL') {\n      if (placeholder5 === 'Gallon') {\n        setResult(amount * 3.785);\n      } else {\n        setResult(amount / 3.785);\n      }\n    } // placeholder === 'Mile' && conversion === 'MLFT' ? setResult(amount*5280) : setResult(amount/5280)\n    // placeholder2 === 'Foot' && conversion === 'FtIn' ? setResult(amount*12) : setResult(amount/12)\n\n  };\n\n  const Reverse = event => {\n    event.preventDefault();\n    placeholder === 'Mile' ? setPlaceholder('Foot') : setPlaceholder('Mile');\n    placeholder2 === 'Foot' ? setPlaceholder2('Inches') : setPlaceholder2('Foot');\n    placeholder3 === 'Inches' ? setPlaceholder3('Centimeter') : setPlaceholder3('Inches');\n    placeholder4 === 'Mile' ? setPlaceholder4('Kilometer') : setPlaceholder4('Mile');\n    placeholder5 === 'Gallon' ? setPlaceholder5('Liter') : setPlaceholder5('Gallon');\n    setResult('');\n    setAmount('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"other_conversions\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"h2oc\",\n      children: \"Other Conversions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-other-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(Form, {\n        className: \"custom-form-other\",\n        children: /*#__PURE__*/_jsxDEV(Form.Control, {\n          className: \"custom-select-other\",\n          as: \"select\",\n          multiple: true,\n          onChange: e => setConversion(e.target.value) + setAmount('') + setResult(''),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"MLFT\",\n            children: \"Mile and Foot\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"FtIn\",\n            children: \"Foot and Inches\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"InCm\",\n            children: \"Inch and Centimeter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"MKm\",\n            children: \"Mile and Kilometer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"GL\",\n            children: \"Gallon and Liter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), conversion === 'MLFT' ? /*#__PURE__*/_jsxDEV(Form, {\n        className: \"mf-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"number\",\n          value: amount,\n          className: \"mf-input\",\n          placeholder: placeholder === 'Mile' ? 'Mile' : 'Foot',\n          onChange: e => setAmount(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"mf-convert\",\n          onClick: getAmount,\n          children: \"Convert\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"mf-reverse\",\n          onClick: Reverse,\n          children: \"Reverse\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          className: \"mf-readonly\",\n          type: \"text\",\n          placeholder: result,\n          readOnly: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }, this) : '', conversion === 'FtIn' ? /*#__PURE__*/_jsxDEV(Form, {\n        className: \"mf-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"number\",\n          value: amount,\n          className: \"mf-input\",\n          placeholder: placeholder2 === 'Foot' ? 'Foot' : \"Inches\",\n          onChange: e => setAmount(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"mf-convert\",\n          onClick: getAmount,\n          children: \"Convert\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"mf-reverse\",\n          onClick: Reverse,\n          children: \"Reverse\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          className: \"mf-readonly\",\n          type: \"text\",\n          placeholder: result,\n          readOnly: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }, this) : '', conversion === 'InCm' ? /*#__PURE__*/_jsxDEV(Form, {\n        className: \"mf-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"number\",\n          value: amount,\n          className: \"mf-input\",\n          placeholder: placeholder3 === 'Inches' ? 'Inches' : \"Centimeter\",\n          onChange: e => setAmount(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"mf-convert\",\n          onClick: getAmount,\n          children: \"Convert\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"mf-reverse\",\n          onClick: Reverse,\n          children: \"Reverse\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          className: \"mf-readonly\",\n          type: \"text\",\n          placeholder: result,\n          readOnly: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 21\n      }, this) : '', conversion === 'MKm' ? /*#__PURE__*/_jsxDEV(Form, {\n        className: \"mf-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"number\",\n          value: amount,\n          className: \"mf-input\",\n          placeholder: placeholder4 === 'Mile' ? 'Mile' : \"Kilometer\",\n          onChange: e => setAmount(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"mf-convert\",\n          onClick: getAmount,\n          children: \"Convert\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"mf-reverse\",\n          onClick: Reverse,\n          children: \"Reverse\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          className: \"mf-readonly\",\n          type: \"text\",\n          placeholder: result,\n          readOnly: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 21\n      }, this) : '', conversion === 'GL' ? /*#__PURE__*/_jsxDEV(Form, {\n        className: \"mf-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"number\",\n          value: amount,\n          className: \"mf-input\",\n          placeholder: placeholder5 === 'Gallon' ? 'Gallon' : \"Liter\",\n          onChange: e => setAmount(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"mf-convert\",\n          onClick: getAmount,\n          children: \"Convert\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"mf-reverse\",\n          onClick: Reverse,\n          children: \"Reverse\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          className: \"mf-readonly\",\n          type: \"text\",\n          placeholder: result,\n          readOnly: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 21\n      }, this) : '']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n}\n\n_s(OtherConversions, \"kb1C2iv1JU7x0awLhbVNIT2U1zg=\");\n\n_c = OtherConversions;\nexport default OtherConversions;\n\nvar _c;\n\n$RefreshReg$(_c, \"OtherConversions\");","map":{"version":3,"sources":["/Users/AngaragT/Desktop/my-react-projects/Portfolio/src/FunComponent/Conversions/OtherConversions.js"],"names":["React","useState","Button","Form","OtherConversions","conversion","setConversion","amount","setAmount","result","setResult","placeholder","setPlaceholder","placeholder2","setPlaceholder2","placeholder3","setPlaceholder3","placeholder4","setPlaceholder4","placeholder5","setPlaceholder5","getAmount","event","preventDefault","Reverse","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport {Button, Form} from 'react-bootstrap'\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nfunction OtherConversions(){\n    const[conversion, setConversion] = useState('')\n    const[amount, setAmount] = useState('')\n    const [result, setResult] = useState('')\n    const [placeholder, setPlaceholder] = useState('Mile')\n    const [placeholder2, setPlaceholder2] = useState('Foot')\n    const [placeholder3, setPlaceholder3] = useState('Inches')\n    const [placeholder4, setPlaceholder4] = useState('Mile')\n    const [placeholder5, setPlaceholder5] = useState('Gallon')\n\n    const getAmount = (event) =>{\n        event.preventDefault()\n        \n        if(conversion === 'MLFT') {\n            if(placeholder === 'Mile'){\n                setResult(amount*5280)\n            }else{\n                setResult(amount/5280)\n            }\n        }\n        else if(conversion === 'FtIn'){\n            if(placeholder2 === 'Foot'){\n                setResult(amount*12)\n            }else{\n                setResult(amount/12)\n            }\n        }\n        else if(conversion === 'InCm'){\n            if(placeholder3 === 'Inches'){\n                setResult(amount*2.54)\n            }else{\n                setResult(amount/2.54)\n            }\n        }\n        else if(conversion === 'MKm'){\n            if(placeholder4=== 'Mile'){\n                setResult(amount*1.609)\n            }else{\n                setResult(amount/1.609)\n            }\n        }\n        else if(conversion === 'GL'){\n            if(placeholder5=== 'Gallon'){\n                setResult(amount*3.785)\n            }else{\n                setResult(amount/3.785)\n            }\n        }\n\n        // placeholder === 'Mile' && conversion === 'MLFT' ? setResult(amount*5280) : setResult(amount/5280)\n        // placeholder2 === 'Foot' && conversion === 'FtIn' ? setResult(amount*12) : setResult(amount/12)\n    }\n    const Reverse = (event) => {\n        event.preventDefault()\n        placeholder === 'Mile'  ? setPlaceholder('Foot') : setPlaceholder('Mile')\n        placeholder2 === 'Foot' ? setPlaceholder2('Inches') : setPlaceholder2('Foot')\n        placeholder3 === 'Inches' ? setPlaceholder3('Centimeter') : setPlaceholder3('Inches')\n        placeholder4 === 'Mile' ? setPlaceholder4('Kilometer') : setPlaceholder4('Mile')\n        placeholder5 === 'Gallon' ? setPlaceholder5('Liter') : setPlaceholder5('Gallon')\n\n        setResult('')\n        setAmount('')\n    }\n    \n\n    return(\n        <div className = 'other_conversions'>\n            <h2 className = 'h2oc'>Other Conversions</h2>\n            <div className = 'form-other-wrapper'>\n                <Form className = \"custom-form-other\">\n                    <Form.Control className = 'custom-select-other'as = \"select\" multiple onChange = {e=>setConversion(e.target.value) + setAmount('') +setResult('')}>\n                        <option value = \"MLFT\">Mile and Foot</option>\n                        <option value = \"FtIn\">Foot and Inches</option>\n                        <option value = \"InCm\">Inch and Centimeter</option>\n                        <option value = \"MKm\">Mile and Kilometer</option>\n                        <option value = \"GL\">Gallon and Liter</option>\n\n                    </Form.Control>\n                </Form>\n                \n                {conversion === 'MLFT' ? \n                    \n                    <Form className='mf-wrapper'>\n                            \n                            <Form.Control type = 'number'value = {amount} className= 'mf-input'\n                                        placeholder = {placeholder === 'Mile' ? 'Mile' : 'Foot'} \n                                        onChange = {e=>setAmount(e.target.value)}>\n                            </Form.Control>\n                            <Button className = 'mf-convert'onClick = {getAmount}>Convert</Button>\n                            <Button className = 'mf-reverse'onClick = {Reverse}>Reverse</Button>\n                            <Form.Control className = 'mf-readonly' type = \"text\" placeholder={result} readOnly/>\n                    </Form>\n                :''}\n                {conversion === 'FtIn' ?\n                    \n                    <Form className = 'mf-wrapper'>\n                    \n                        <Form.Control type = 'number' value = {amount} className = 'mf-input'\n                                    placeholder = {placeholder2 === 'Foot' ? 'Foot' : \"Inches\"}\n                                    onChange = {e=>setAmount(e.target.value)}>\n                        </Form.Control>\n                        <Button className = 'mf-convert' onClick = {getAmount}>Convert</Button>\n                        <Button className = 'mf-reverse'onClick = {Reverse}>Reverse</Button>\n                        <Form.Control className = 'mf-readonly' type = \"text\" placeholder={result} readOnly/>\n                    </Form>\n                : ''}\n                {conversion === 'InCm' ? \n                    <Form className = 'mf-wrapper'>\n                        \n                        <Form.Control type = 'number' value = {amount} className = 'mf-input'\n                                    placeholder = {placeholder3 === 'Inches' ? 'Inches' : \"Centimeter\"}\n                                    onChange = {e=>setAmount(e.target.value)}>\n                        </Form.Control>\n                        <Button className = 'mf-convert' onClick = {getAmount}>Convert</Button>\n                        <Button className = 'mf-reverse'onClick = {Reverse}>Reverse</Button>\n                        <Form.Control className = 'mf-readonly' type = \"text\" placeholder={result} readOnly/>\n                    </Form>\n                    \n                : ''}\n                {conversion === 'MKm' ? \n                    <Form className = 'mf-wrapper'>\n                        \n                        <Form.Control type = 'number' value = {amount} className = 'mf-input'\n                                    placeholder = {placeholder4 === 'Mile' ? 'Mile' : \"Kilometer\"}\n                                    onChange = {e=>setAmount(e.target.value)}>\n                        </Form.Control>\n                        <Button className = 'mf-convert' onClick = {getAmount}>Convert</Button>\n                        <Button className = 'mf-reverse'onClick = {Reverse}>Reverse</Button>\n                        <Form.Control className = 'mf-readonly' type = \"text\" placeholder={result} readOnly/>\n                    </Form>\n                    \n                : ''}\n                {conversion === 'GL' ? \n                    <Form className = 'mf-wrapper'>\n                        \n                        <Form.Control type = 'number' value = {amount} className = 'mf-input'\n                                    placeholder = {placeholder5 === 'Gallon' ? 'Gallon' : \"Liter\"}\n                                    onChange = {e=>setAmount(e.target.value)}>\n                        </Form.Control>\n                        <Button className = 'mf-convert' onClick = {getAmount}>Convert</Button>\n                        <Button className = 'mf-reverse'onClick = {Reverse}>Reverse</Button>\n                        <Form.Control className = 'mf-readonly' type = \"text\" placeholder={result} readOnly/>\n                    </Form>\n                    \n                : ''}\n            </div>\n            \n    \n\n        </div>\n    )\n\n\n}\n\n\n\n\nexport default OtherConversions"]},"metadata":{},"sourceType":"module"}