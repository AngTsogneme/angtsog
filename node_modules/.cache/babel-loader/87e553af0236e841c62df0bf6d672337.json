{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/AngaragT/Desktop/Portfolio/src/FunComponent/Conversions/CurrencyExchange.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Button, Form } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction CurrencyExchange() {\n  _s();\n\n  const [response, setResponse] = useState([]);\n  const [rates, setRates] = useState([]);\n  const [fromCurrency, setFromCurrency] = useState('');\n  const [toCurrency, setToCurrency] = useState('');\n  const [amount, setAmount] = useState('');\n  const [converted, setConverted] = useState('');\n  const [errorM, setErrorM] = useState('');\n  useEffect(() => {\n    if (fromCurrency !== \"\") {\n      fetch('https://api.exchangeratesapi.io/latest'.concat('?base=' + fromCurrency)).then(r => r.json()).then(r => {\n        setResponse(r);\n        setRates(r.rates);\n      });\n    } else {\n      fetch('https://api.exchangeratesapi.io/latest').then(r => r.json()).then(r => {\n        setResponse(r);\n        setRates(r.rates);\n        setFromCurrency(r.base);\n        setToCurrency('CAD');\n      });\n    }\n  }, [fromCurrency]);\n\n  const handleClick = event => {\n    if (amount !== '') {\n      setErrorM('');\n      setConverted(parseFloat(amount * rates[toCurrency]).toFixed(2));\n    } else {\n      setErrorM('Enter amount to convert');\n    }\n\n    event.preventDefault();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"currency_exchange\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"h2ce\",\n      children: \"Currency Exchange\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      className: \"custom-form\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"FROM:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        as: \"select\",\n        className: \"custom-select-from\",\n        value: fromCurrency,\n        onChange: e => setFromCurrency(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: fromCurrency,\n          children: fromCurrency\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), Object.keys(rates).map(currency_name => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: currency_name,\n          children: currency_name\n        }, currency_name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 60\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"TO:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        as: \"select\",\n        className: \"custom-select-to\",\n        value: toCurrency,\n        onChange: e => setToCurrency(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: toCurrency,\n          children: toCurrency\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), Object.keys(rates).map(currency_name => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: currency_name,\n          children: currency_name\n        }, currency_name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 60\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        className: \"custom-enteramount\",\n        type: \"number\",\n        placeholder: \"Enter amount\",\n        value: amount,\n        onChange: e => setAmount(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"custom-convert-button\",\n        onClick: handleClick,\n        children: \"Convert\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        className: \"custom-display\",\n        type: \"text\",\n        placeholder: errorM === '' ? converted + \" as of \" + response.date : errorM,\n        readOnly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CurrencyExchange, \"YdPLKHjVucnBzcIVoLyRfylYUpo=\");\n\n_c = CurrencyExchange;\nexport default CurrencyExchange;\n\nvar _c;\n\n$RefreshReg$(_c, \"CurrencyExchange\");","map":{"version":3,"sources":["/Users/AngaragT/Desktop/Portfolio/src/FunComponent/Conversions/CurrencyExchange.js"],"names":["React","useEffect","useState","Button","Form","CurrencyExchange","response","setResponse","rates","setRates","fromCurrency","setFromCurrency","toCurrency","setToCurrency","amount","setAmount","converted","setConverted","errorM","setErrorM","fetch","concat","then","r","json","base","handleClick","event","parseFloat","toFixed","preventDefault","e","target","value","Object","keys","map","currency_name","date"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport {Button, Form} from 'react-bootstrap'\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nfunction CurrencyExchange(){\n    const[response, setResponse] = useState([])\n    const[rates,setRates] = useState([])\n    const[fromCurrency,setFromCurrency] = useState('')\n    const[toCurrency,setToCurrency] = useState('')\n    const[amount, setAmount] = useState('')\n    const[converted, setConverted] = useState('')\n    const[errorM, setErrorM] = useState('')\n    useEffect(()=>{\n\n        if(fromCurrency!==\"\"){\n\n            fetch('https://api.exchangeratesapi.io/latest'.concat('?base='+fromCurrency))\n                .then(r=>r.json())\n                .then((r)=>{\n                    setResponse(r)\n                    setRates(r.rates)\n                })\n            }\n        else{\n            fetch('https://api.exchangeratesapi.io/latest')\n                .then(r=>r.json())\n                .then((r)=>{\n                    setResponse(r)\n                    setRates(r.rates)\n                    setFromCurrency(r.base)\n                    setToCurrency('CAD')\n\n                })\n        }\n\n    },[fromCurrency])\n\n    const handleClick = (event) =>{\n        if(amount !== ''){\n            setErrorM('')\n            setConverted(parseFloat(amount*rates[toCurrency]).toFixed(2))\n            \n        }else{\n            setErrorM('Enter amount to convert')\n        }\n            \n        event.preventDefault()\n\n            \n        \n    }\n    \n\n    return(\n        \n        <div className = 'currency_exchange'>\n            <h2 className = 'h2ce'>Currency Exchange</h2>\n            <Form className = 'custom-form'>\n                <Form.Label>FROM:</Form.Label>\n                <Form.Control as = \"select\" className = 'custom-select-from' value = {fromCurrency}\n                        onChange = {e=>setFromCurrency(e.target.value)}>\n                    <option value = {fromCurrency}>{fromCurrency}</option>\n                    {Object.keys(rates).map(currency_name=><option value = {currency_name} key={currency_name}>{currency_name}</option>)}\n                </Form.Control>\n\n                <Form.Label>TO:</Form.Label>\n                <Form.Control as = \"select\" className = 'custom-select-to' value = {toCurrency}\n                        onChange = {e=>setToCurrency(e.target.value)}>\n                    <option value = {toCurrency}>{toCurrency}</option>\n                    {Object.keys(rates).map(currency_name=><option value = {currency_name} key={currency_name}>{currency_name}</option>)}\n                </Form.Control>\n\n                <Form.Control className = 'custom-enteramount'type = 'number' placeholder = 'Enter amount' value={amount} onChange = {e=>setAmount(e.target.value)}/>\n                \n                <Button className = 'custom-convert-button' onClick={handleClick}>Convert</Button>\n                <Form.Control className = 'custom-display' type = 'text' placeholder = {errorM === '' ? converted + \" as of \" + response.date : errorM} readOnly/>\n            </Form>\n            \n            \n            \n        </div>\n       \n       \n    )\n}\n\nexport default CurrencyExchange"]},"metadata":{},"sourceType":"module"}