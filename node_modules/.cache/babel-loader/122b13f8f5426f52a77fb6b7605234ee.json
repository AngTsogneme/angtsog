{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/AngaragT/Desktop/Portfolio/src/FunComponent/AgendaProject.js\";\nimport React, { Component } from 'react';\nimport { RiCalendarTodoFill } from 'react-icons/ri';\nimport JugPuzzle from \"./JugPuzzle\";\nimport Main from \"../FunComponent/Hatchways/Main\";\nimport CurrencyExchange from './Conversions/CurrencyExchange';\nimport OtherConversions from './Conversions/OtherConversions';\nimport TimePicker from 'react-bootstrap-time-picker';\n\nclass AgendaProject extends Component {\n  constructor() {\n    super();\n    this.state = {\n      time: \"\",\n      task: \"\",\n      list: [],\n      id: 1,\n      isChecked: false,\n      message: \"\"\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleClear = this.handleClear.bind(this);\n    this.handleOverflow = this.handleOverflow.bind(this);\n    this.handleTime = this.handleTime.bind(this);\n  }\n\n  handleChange(event) {\n    const {\n      name,\n      value,\n      type,\n      checked\n    } = event.target;\n    type === \"checkbox\" && this.state.list.task === name ? this.setState({\n      [name]: checked\n    }) : name === \"time\" ? this.setState({\n      time: event.target.value\n    }) : this.setState({\n      [name]: value\n    });\n  }\n\n  handleSubmit(event) {\n    if (this.state.task !== \"\" && this.state.time !== \"\") {\n      this.setState({\n        id: this.state.id + 1,\n        task: \"\",\n        time: \"\",\n        message: \"\",\n        list: this.state.list.concat([{\n          id: this.state.id,\n          value: this.state.time + \": \" + this.state.task,\n          completed: this.state.isChecked\n        }])\n      });\n    } else {\n      this.setState({\n        message: \"Please enter time and task.\"\n      });\n    }\n\n    event.preventDefault();\n    /*  how to catch no entry */\n  }\n\n  handleClear(event) {\n    this.setState({\n      task: \"\",\n      list: [],\n      id: 1\n    });\n    event.preventDefault();\n  }\n\n  handleOverflow() {\n    this.setState({\n      list: []\n    });\n  }\n\n  handleTime() {\n    console.log(time);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"agendaproject\",\n      className: \"agenda_project\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"agenda-form\",\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"h1_agenda\",\n          children: [\"Agenda \", /*#__PURE__*/_jsxDEV(RiCalendarTodoFill, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 54\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TimePicker, {\n          start: \"00:00\",\n          end: \"24:00\",\n          step: 15,\n          value: this.state.time,\n          onChange: this.handleTime\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"task_input\",\n          type: \"text\",\n          value: this.state.task,\n          name: \"task\",\n          placeholder: \"Enter Task\",\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button_add\",\n            type: \"submit\",\n            children: \" Add \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button_clear\",\n            onClick: this.handleClear,\n            children: \" Clear \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"display_todo\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: this.state.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this), this.state.list.length < 14 ? this.state.list.map(item => /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"Checkbox\",\n            name: \"isChecked\",\n            checked: this.state.list.completed,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 25\n          }, this), item.value, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 29\n          }, this)]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 25\n        }, this)) : this.handleOverflow()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(JugPuzzle, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CurrencyExchange, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(OtherConversions, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default AgendaProject;","map":{"version":3,"sources":["/Users/AngaragT/Desktop/Portfolio/src/FunComponent/AgendaProject.js"],"names":["React","Component","RiCalendarTodoFill","JugPuzzle","Main","CurrencyExchange","OtherConversions","TimePicker","AgendaProject","constructor","state","time","task","list","id","isChecked","message","handleChange","bind","handleSubmit","handleClear","handleOverflow","handleTime","event","name","value","type","checked","target","setState","concat","completed","preventDefault","console","log","render","length","map","item"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport {RiCalendarTodoFill} from 'react-icons/ri'\nimport JugPuzzle from \"./JugPuzzle\"\nimport Main from \"../FunComponent/Hatchways/Main\"\nimport CurrencyExchange from './Conversions/CurrencyExchange'\nimport OtherConversions from './Conversions/OtherConversions'\nimport TimePicker from 'react-bootstrap-time-picker'\nclass AgendaProject extends Component{\n    constructor(){\n        super()\n        this.state = {\n            time: \"\",\n            task: \"\",\n            list: [],\n            id: 1,\n            isChecked: false,\n            message: \"\"\n            \n        }\n        \n        this.handleChange = this.handleChange.bind(this)\n        this.handleSubmit = this.handleSubmit.bind(this)\n        this.handleClear = this.handleClear.bind(this)\n        this.handleOverflow =  this.handleOverflow.bind(this)\n        this.handleTime = this.handleTime.bind(this)\n    }\n\n    handleChange(event){\n        \n        const{name, value, type, checked} = event.target\n        \n        type === \"checkbox\" && this.state.list.task === name?\n        this.setState({\n            [name]: checked     \n        }):\n        name === \"time\"?\n        this.setState({\n            time: event.target.value\n        }):\n        this.setState({\n            [name] : value,\n           \n        })\n    }\n\n    handleSubmit(event){\n        \n        if(this.state.task !== \"\" && this.state.time !== \"\"){\n            this.setState({\n                id: this.state.id + 1,\n                task: \"\",\n                time: \"\",\n                message:\"\",\n                list: this.state.list.concat([{id: this.state.id, \n                                value: this.state.time + \": \" + this.state.task, \n                                completed: this.state.isChecked}]),\n                \n            \n            })\n            \n        }else{\n            this.setState({\n                message: \"Please enter time and task.\"\n            })\n        }\n        event.preventDefault()\n       /*  how to catch no entry */\n    }\n    \n    handleClear(event){\n        \n        this.setState({\n            \n            task: \"\",\n            list: [],\n            id: 1,\n        })\n        event.preventDefault()\n    }\n    handleOverflow(){\n        this.setState({\n            list:[]\n        })\n    }\n    handleTime(){\n        console.log(time)\n    }\n\n    render(){\n        \n        return(\n            \n            <div id = \"agendaproject\" className = \"agenda_project\">\n            \n                <form className = \"agenda-form\" onSubmit = {this.handleSubmit}>\n                    <h1 className=\"h1_agenda\">Agenda <RiCalendarTodoFill/></h1>\n\n                    <TimePicker start = \"00:00\" end = \"24:00\" step={15} value ={this.state.time} onChange = {this.handleTime}/>\n                    <input className = \"task_input\"\n                        type = \"text\"\n                        value = {this.state.task}\n                        name = \"task\"\n                        placeholder = \"Enter Task\" \n                        onChange = {this.handleChange}\n                    />\n                    <div className = 'button-wrapper'>\n                        <button className = \"button_add\" type = \"submit\"> Add </button>\n                        <button className = \"button_clear\" onClick = {this.handleClear}> Clear </button>\n                    </div>\n                </form>\n              \n                <div className = \"display_todo\">\n                    \n                    <p>{this.state.message}</p>\n                     \n                    {this.state.list.length < 14 ? this.state.list.map((item)=> \n                    \n                        <label key = {item.id}>\n                        <input type = \"Checkbox\"\n                            \n                            name = \"isChecked\"\n                            checked = {this.state.list.completed}\n                            onChange = {this.handleChange}\n                            \n                            />\n                            {item.value}\n                            <br/>\n                        </label>\n                        \n                        \n                    )  : this.handleOverflow()}\n\n                </div>\n                <JugPuzzle/>\n                <Main/>\n                <CurrencyExchange/>\n                <OtherConversions/>\n            </div>\n        )\n            \n        \n    }\n        \n}\nexport default AgendaProject"]},"metadata":{},"sourceType":"module"}