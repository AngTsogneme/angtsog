{"ast":null,"code":"var _jsxFileName = \"/Users/AngaragT/Desktop/Portfolio/src/FunComponent/AgendaProject.js\";\nimport React, { Component } from 'react';\nimport { RiCalendarTodoFill } from 'react-icons/ri';\nimport JugPuzzle from \"./JugPuzzle\";\nimport Main from \"../FunComponent/Hatchways/Main\";\nimport TimePicker from 'rc-time-picker';\nimport 'rc-time-picker/assets/index.css';\n\nclass AgendaProject extends Component {\n  constructor() {\n    super();\n    this.state = {\n      time: \"\",\n      task: \"\",\n      list: [],\n      id: 1,\n      isChecked: false,\n      message: \"\"\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleClear = this.handleClear.bind(this);\n    this.handleOverflow = this.handleOverflow.bind(this);\n  }\n\n  handleChange(event) {\n    console.log(event.target);\n    const {\n      name,\n      value,\n      type,\n      checked\n    } = event.target;\n    type === \"checkbox\" && this.state.list.task === name ? this.setState({\n      [name]: checked\n    }) : name === \"time\" ? this.setState({\n      time: event.target.value\n    }) : this.setState({\n      [name]: value\n    });\n  }\n\n  handleSubmit(event) {\n    if (this.state.task !== \"\" && this.state.time !== \"\") {\n      this.setState({\n        id: this.state.id + 1,\n        task: \"\",\n        time: \"\",\n        message: \"\",\n        list: this.state.list.concat([{\n          id: this.state.id,\n          value: this.state.time + \": \" + this.state.task,\n          completed: this.state.isChecked\n        }])\n      });\n    } else {\n      this.setState({\n        message: \"Please enter time and task.\"\n      });\n    }\n\n    event.preventDefault();\n    /*  how to catch no entry */\n  }\n\n  handleClear(event) {\n    this.setState({\n      time: \"\",\n      task: \"\",\n      list: [],\n      id: 1\n    });\n    event.preventDefault();\n  }\n\n  handleOverflow() {\n    this.setState({\n      list: []\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"agendaproject\",\n      className: \"agenda_project\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      className: \"agenda-form\",\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"h1_agenda\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }\n    }, \"Agenda \", /*#__PURE__*/React.createElement(RiCalendarTodoFill, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 54\n      }\n    })), /*#__PURE__*/React.createElement(TimePicker, {\n      name: \"time\",\n      showSecond: false,\n      use12Hours: true,\n      popupClassName: \"time_popup\",\n      placeholder: \"Enter Time\",\n      onChange: function (value) {\n        console.log(value);\n      },\n      onClose: function (value) {\n        this.state.list.concat(value);\n      },\n      className: \"time_picker\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 25\n      }\n    }), console.log(this.state.tiem), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"task_input\",\n      type: \"text\",\n      value: this.state.task,\n      name: \"task\",\n      placeholder: \"Enter Task\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"button_add\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 21\n      }\n    }, \" Add \"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"button_clear\",\n      onClick: this.handleClear,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 21\n      }\n    }, \" Clear \")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"display_todo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 21\n      }\n    }, this.state.message), this.state.list.length < 14 ? this.state.list.map(item => /*#__PURE__*/React.createElement(\"label\", {\n      key: item.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"Checkbox\",\n      name: \"isChecked\",\n      checked: this.state.list.completed,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 25\n      }\n    }), item.value, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 29\n      }\n    }))) : this.handleOverflow()), /*#__PURE__*/React.createElement(JugPuzzle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Main, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default AgendaProject;","map":{"version":3,"sources":["/Users/AngaragT/Desktop/Portfolio/src/FunComponent/AgendaProject.js"],"names":["React","Component","RiCalendarTodoFill","JugPuzzle","Main","TimePicker","AgendaProject","constructor","state","time","task","list","id","isChecked","message","handleChange","bind","handleSubmit","handleClear","handleOverflow","event","console","log","target","name","value","type","checked","setState","concat","completed","preventDefault","render","tiem","length","map","item"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport {RiCalendarTodoFill} from 'react-icons/ri'\nimport JugPuzzle from \"./JugPuzzle\"\nimport Main from \"../FunComponent/Hatchways/Main\"\nimport TimePicker from 'rc-time-picker'\nimport 'rc-time-picker/assets/index.css'\nclass AgendaProject extends Component{\n    constructor(){\n        super()\n        this.state = {\n            time: \"\",\n            task: \"\",\n            list: [],\n            id: 1,\n            isChecked: false,\n            message: \"\"\n            \n        }\n        \n        this.handleChange = this.handleChange.bind(this)\n        this.handleSubmit = this.handleSubmit.bind(this)\n        this.handleClear = this.handleClear.bind(this)\n        this.handleOverflow =  this.handleOverflow.bind(this)\n    }\n\n    handleChange(event){\n        console.log(event.target)\n        const{name, value, type, checked} = event.target\n        \n        type === \"checkbox\" && this.state.list.task === name?\n        this.setState({\n            [name]: checked     \n        }):\n        name === \"time\"?\n        this.setState({\n            time: event.target.value\n        }):\n        this.setState({\n            [name] : value,\n           \n        })\n    }\n\n    handleSubmit(event){\n        \n        if(this.state.task !== \"\" && this.state.time !== \"\"){\n            this.setState({\n                id: this.state.id + 1,\n                task: \"\",\n                time: \"\",\n                message:\"\",\n                list: this.state.list.concat([{id: this.state.id, \n                                value: this.state.time + \": \" + this.state.task, \n                                completed: this.state.isChecked}]),\n                \n            \n            })\n            \n        }else{\n            this.setState({\n                message: \"Please enter time and task.\"\n            })\n        }\n        event.preventDefault()\n       /*  how to catch no entry */\n    }\n    \n    handleClear(event){\n        \n        this.setState({\n            time: \"\",\n            task: \"\",\n            list: [],\n            id: 1,\n        })\n        event.preventDefault()\n    }\n    handleOverflow(){\n        this.setState({\n            list:[]\n        })\n    }\n\n    render(){\n        \n        return(\n            \n            <div id = \"agendaproject\" className = \"agenda_project\">\n            \n                <form className = \"agenda-form\" onSubmit = {this.handleSubmit}>\n                    <h1 className=\"h1_agenda\">Agenda <RiCalendarTodoFill/></h1>\n\n                        <TimePicker \n                        name = \"time\"\n                        showSecond = {false} \n                        use12Hours = {true} \n                        popupClassName = \"time_popup\"\n                        placeholder = \"Enter Time\"\n                        \n                        onChange = { function(value){console.log(value)}}\n                        onClose = {function(value){this.state.list.concat(value)}}\n                        \n                        className = \"time_picker\"/>\n                  \n                    {console.log(this.state.tiem)}\n                    <input className = \"task_input\"\n                        type = \"text\"\n                        value = {this.state.task}\n                        name = \"task\"\n                        placeholder = \"Enter Task\" \n                        onChange = {this.handleChange}\n                    />\n                    <br/>\n                    <button className = \"button_add\" type = \"submit\"> Add </button>\n                    <br/>\n                    <button className = \"button_clear\" onClick = {this.handleClear}> Clear </button>\n                    \n                </form>\n              \n                <div className = \"display_todo\">\n                    \n                    <p>{this.state.message}</p>\n                     \n                    {this.state.list.length < 14 ? this.state.list.map((item)=> \n                    \n                        <label key = {item.id}>\n                        <input type = \"Checkbox\"\n                            \n                            name = \"isChecked\"\n                            checked = {this.state.list.completed}\n                            onChange = {this.handleChange}\n                            \n                            />\n                            {item.value}\n                            <br/>\n                        </label>\n                        \n                        \n                    )  : this.handleOverflow()}\n\n                </div>\n                <JugPuzzle/>\n                <Main/>\n            </div>\n        )\n            \n        \n    }\n        \n}\nexport default AgendaProject"]},"metadata":{},"sourceType":"module"}