{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/AngaragT/Desktop/my-react-projects/Portfolio/src/FunComponent/AgendaProject.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { RiCalendarTodoFill } from 'react-icons/ri';\nimport JugPuzzle from \"./JugPuzzle\";\nimport Main from \"../FunComponent/Hatchways/Main\";\nimport CurrencyExchange from './Conversions/CurrencyExchange';\nimport OtherConversions from './Conversions/OtherConversions'; // class AgendaProject extends Component{\n//     constructor(){\n//         super()\n//         this.state = {\n//             task: \"\",\n//             list: [],\n//             id: 1,\n//             isChecked: false,\n//             message: \"\"\n//         }\n//         this.handleChange = this.handleChange.bind(this)\n//         this.handleSubmit = this.handleSubmit.bind(this)\n//         this.handleClear = this.handleClear.bind(this)\n//         this.handleOverflow =  this.handleOverflow.bind(this)\n//     }\n//     handleChange(event){\n//         const{name, value, type} = event.target\n//         type === \"checkbox\" ?\n//         this.setState({\n//             [name]: true     \n//         }):\n//         this.setState({\n//             [name] : value,\n//         })\n//     }\n//     handleSubmit(event){\n//         if(this.state.task !== \"\" && this.state.time !== \"\"){\n//             this.setState({\n//                 id: this.state.id + 1,\n//                 task: \"\",\n//                 message:\"\",\n//                 list: this.state.list.concat([{id: this.state.id, \n//                                 value:  this.state.task, \n//                                 completed: this.state.isChecked}]),\n//             })\n//         }else{\n//             this.setState({\n//                 message: \"Please enter a task.\"\n//             })\n//         }\n//         event.preventDefault()\n//        /*  how to catch no entry */\n//     }\n//     handleClear(event){\n//         this.setState({\n//             task: \"\",\n//             list: [],\n//             id: 1,\n//         })\n//         event.preventDefault()\n//     }\n//     handleOverflow(){\n//         this.setState({\n//             list:[]\n//         })\n//     }\n//     render(){\n//         return(\n//             <div id = \"agendaproject\" className = \"agenda_project\">\n//                 <form className = \"agenda-form\" onSubmit = {this.handleSubmit}>\n//                     <h1 className=\"h1_agenda\">Agenda <RiCalendarTodoFill/></h1>\n//                     <input className = \"task_input\"\n//                         type = \"text\"\n//                         value = {this.state.task}\n//                         name = \"task\"\n//                         placeholder = \"Enter Task\" \n//                         onChange = {this.handleChange}\n//                     />\n//                     <div className = 'button-wrapper'>\n//                         <button className = \"button_add\" type = \"submit\"> Add </button>\n//                         <button className = \"button_clear\" onClick = {this.handleClear}> Clear </button>\n//                     </div>\n//                 </form>\n//                 <div className = \"display_todo\">\n//                     <p>{this.state.message}</p>\n//                     {this.state.list.length < 14 ? this.state.list.map((item)=> \n//                         <ul key = {item.id}>\n//                         <input type = \"Checkbox\"\n//                             name = \"isChecked\"\n//                             value = {this.state.isChecked}\n//                             onChange = {this.handleChange}\n//                             />\n//                             {item.value}\n//                         </ul>\n//                     )  : this.handleOverflow()}\n//                     {console.log(this.state.list)}\n//                 </div>\n//                 <JugPuzzle/>\n//                 <Main/>\n//                 <CurrencyExchange/>\n//                 <OtherConversions/>\n//             </div>\n//         )\n//     }\n// }\n// export default AgendaProject\n\nfunction AgendaProject() {\n  _s();\n\n  const [task, setTask] = useState('');\n  const [tasklist, setTaskList] = useState([]);\n  const [message, setMessage] = useState('');\n  const [id, setId] = useState(1);\n\n  const handleClear = event => {\n    setTask('');\n    setTaskList([]);\n    setId(1);\n    setMessage('');\n    event.preventDefault();\n  };\n\n  const handleOverflow = () => {\n    setTaskList([]);\n    setMessage('');\n  };\n\n  const handleChange = event => {\n    event.preventDefault();\n\n    if (task !== \"\") {\n      setId(id + 1);\n      setTaskList(tasklist.concat({\n        id: id,\n        value: task\n      }));\n      setTask('');\n    } else {\n      setMessage(\"Please enter a task\");\n    }\n  };\n\n  const handleClick = event => {\n    tasklist.splice(tasklist.indexOf(event.target.value) - 1, 1); ///const result = tasklist.filter(t=>event.target.value !== t.id)\n\n    console.log(tasklist);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"agendaproject\",\n    className: \"agenda_project\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"agenda-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"h1_agenda\",\n        children: [\"Agenda \", /*#__PURE__*/_jsxDEV(RiCalendarTodoFill, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 50\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"task_input\",\n        type: \"text\",\n        value: task,\n        placeholder: \"Enter Task\",\n        onChange: e => setTask(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button_add\",\n          onClick: handleChange,\n          children: \" Add \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button_clear\",\n          onClick: handleClear,\n          children: \" Clear \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"display_todo\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 17\n      }, this), console.log(tasklist), tasklist.length < 14 ? tasklist.map(item => /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [item.value, /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"delete-task\",\n          onClick: handleClick,\n          value: item.id,\n          children: \"x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 29\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 25\n      }, this)) : handleOverflow()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(JugPuzzle, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CurrencyExchange, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(OtherConversions, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 183,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AgendaProject, \"QzUPuhIOWL23jsgnnH4xJL4kV1E=\");\n\n_c = AgendaProject;\nexport default AgendaProject;\n\nvar _c;\n\n$RefreshReg$(_c, \"AgendaProject\");","map":{"version":3,"sources":["/Users/AngaragT/Desktop/my-react-projects/Portfolio/src/FunComponent/AgendaProject.js"],"names":["React","useState","RiCalendarTodoFill","JugPuzzle","Main","CurrencyExchange","OtherConversions","AgendaProject","task","setTask","tasklist","setTaskList","message","setMessage","id","setId","handleClear","event","preventDefault","handleOverflow","handleChange","concat","value","handleClick","splice","indexOf","target","console","log","e","length","map","item"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport {RiCalendarTodoFill} from 'react-icons/ri'\nimport JugPuzzle from \"./JugPuzzle\"\nimport Main from \"../FunComponent/Hatchways/Main\"\nimport CurrencyExchange from './Conversions/CurrencyExchange'\nimport OtherConversions from './Conversions/OtherConversions'\n// class AgendaProject extends Component{\n//     constructor(){\n//         super()\n//         this.state = {\n          \n//             task: \"\",\n//             list: [],\n//             id: 1,\n//             isChecked: false,\n//             message: \"\"\n            \n//         }\n        \n//         this.handleChange = this.handleChange.bind(this)\n//         this.handleSubmit = this.handleSubmit.bind(this)\n//         this.handleClear = this.handleClear.bind(this)\n//         this.handleOverflow =  this.handleOverflow.bind(this)\n//     }\n\n//     handleChange(event){\n        \n//         const{name, value, type} = event.target\n        \n//         type === \"checkbox\" ?\n//         this.setState({\n//             [name]: true     \n//         }):\n       \n//         this.setState({\n//             [name] : value,\n           \n//         })\n//     }\n\n//     handleSubmit(event){\n        \n//         if(this.state.task !== \"\" && this.state.time !== \"\"){\n//             this.setState({\n//                 id: this.state.id + 1,\n//                 task: \"\",\n//                 message:\"\",\n//                 list: this.state.list.concat([{id: this.state.id, \n//                                 value:  this.state.task, \n//                                 completed: this.state.isChecked}]),\n                \n            \n//             })\n            \n//         }else{\n//             this.setState({\n//                 message: \"Please enter a task.\"\n//             })\n//         }\n//         event.preventDefault()\n//        /*  how to catch no entry */\n//     }\n    \n//     handleClear(event){\n        \n//         this.setState({\n            \n//             task: \"\",\n//             list: [],\n//             id: 1,\n//         })\n//         event.preventDefault()\n//     }\n//     handleOverflow(){\n//         this.setState({\n//             list:[]\n//         })\n//     }\n    \n\n//     render(){\n        \n//         return(\n            \n//             <div id = \"agendaproject\" className = \"agenda_project\">\n            \n//                 <form className = \"agenda-form\" onSubmit = {this.handleSubmit}>\n//                     <h1 className=\"h1_agenda\">Agenda <RiCalendarTodoFill/></h1>\n\n//                     <input className = \"task_input\"\n//                         type = \"text\"\n//                         value = {this.state.task}\n//                         name = \"task\"\n//                         placeholder = \"Enter Task\" \n//                         onChange = {this.handleChange}\n//                     />\n//                     <div className = 'button-wrapper'>\n//                         <button className = \"button_add\" type = \"submit\"> Add </button>\n//                         <button className = \"button_clear\" onClick = {this.handleClear}> Clear </button>\n//                     </div>\n//                 </form>\n              \n//                 <div className = \"display_todo\">\n                    \n//                     <p>{this.state.message}</p>\n                     \n//                     {this.state.list.length < 14 ? this.state.list.map((item)=> \n//                         <ul key = {item.id}>\n                       \n//                         <input type = \"Checkbox\"\n                            \n//                             name = \"isChecked\"\n//                             value = {this.state.isChecked}\n//                             onChange = {this.handleChange}\n                            \n//                             />\n                           \n//                             {item.value}\n                            \n               \n//                         </ul>\n                        \n//                     )  : this.handleOverflow()}\n//                     {console.log(this.state.list)}\n//                 </div>\n//                 <JugPuzzle/>\n//                 <Main/>\n//                 <CurrencyExchange/>\n//                 <OtherConversions/>\n//             </div>\n//         )\n            \n        \n//     }\n        \n// }\n// export default AgendaProject\n\nfunction AgendaProject(){\n    \n    const[task, setTask] = useState('')\n    const[tasklist, setTaskList] = useState([])\n    const[message, setMessage] = useState('')\n    const[id, setId] = useState(1)\n\n    \n    const handleClear = (event) =>{\n        setTask('')\n        setTaskList([])\n        setId(1)\n        setMessage('')\n        event.preventDefault()\n    }\n    const handleOverflow = () =>{\n        setTaskList([])\n        setMessage('')\n    }\n\n    const handleChange = (event) =>{\n        event.preventDefault()\n        \n        if(task !== \"\"){\n            setId(id+1)\n            setTaskList(tasklist.concat({id:id,value:task}))\n            setTask('')\n        }\n        \n        else{\n            setMessage(\"Please enter a task\")\n        }\n\n    }\n    const handleClick = (event) =>{\n        tasklist.splice(tasklist.indexOf(event.target.value)-1,1)\n        ///const result = tasklist.filter(t=>event.target.value !== t.id)\n        console.log(tasklist)\n        \n     \n    }\n\n    return(\n        \n        <div id = \"agendaproject\" className = \"agenda_project\">\n            \n            <form className = \"agenda-form\" >\n                <h1 className=\"h1_agenda\">Agenda <RiCalendarTodoFill/></h1>\n            \n                    <input className = \"task_input\"\n                        type = \"text\"\n                        value = {task}\n                        placeholder = \"Enter Task\" \n                        onChange = {e=>setTask(e.target.value)}\n                        />\n                    <div className = 'button-wrapper'>\n                        <button className = \"button_add\" onClick = {handleChange}> Add </button>\n                        <button className = \"button_clear\" onClick = {handleClear}> Clear </button>\n                    </div>\n            </form>\n                          \n            <div className = \"display_todo\">\n                                \n                <p>{message}</p>\n                    {console.log(tasklist)}\n                    {tasklist.length < 14 ? tasklist.map((item)=> \n                        <ul key = {item.id}>\n                                   \n                            {item.value}\n                            <button className= \"delete-task\" onClick = {handleClick} value = {item.id}>x</button>\n                            \n                        </ul>\n                        )  : handleOverflow()}\n            </div>\n            <JugPuzzle/>\n            <Main/>\n            <CurrencyExchange/>\n            <OtherConversions/>\n        </div>\n       \n    )\n}\nexport default AgendaProject"]},"metadata":{},"sourceType":"module"}