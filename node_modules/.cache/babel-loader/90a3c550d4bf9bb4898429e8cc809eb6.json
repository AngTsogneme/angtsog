{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _slicedToArray from\"/Users/AngaragT/Desktop/Portfolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import Expand from\"./Expand\";import Tag from\"./Tag\";function Main(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),students=_useState2[0],setStudents=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),search=_useState4[0],setSearch=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),searchtag=_useState6[0],setSearchTag=_useState6[1];// const [array, setArray] = useState()\nuseEffect(function(){fetch('https://api.hatchways.io/assessment/students').then(function(response){return response.json();}).then(function(response){// response['tags'] = []\n// setArray(response)\nresponse.students.map(function(c){return response.students[response.students.indexOf(c)]['tags']=[''];});setStudents(response.students);});},[]);// const handleChange = (e) =>{\n//     setTag(e.target.value)\n// }\nvar handleTags=function handleTags(taglist,index){// array.tags = taglist\n// console.log(array)\nstudents[index].tags=taglist;};return/*#__PURE__*/_jsxs(\"div\",{className:\"display_box\",children:[/*#__PURE__*/_jsx(\"input\",{className:\"name_search\",type:\"text\",placeholder:\"Search by name\",onChange:function onChange(e){return setSearch(e.target.value);}}),/*#__PURE__*/_jsx(\"input\",{className:\"tag_search\",type:\"text\",placeholder:\"Search by tag\",onChange:function onChange(e){return setSearchTag(e.target.value);}}),students.filter(function(student){return student.tags.join().includes(searchtag)&&(student.firstName.toLowerCase().includes(search)+student.lastName.toLowerCase().includes(search)||student.firstName.toLowerCase().concat(\" \"+student.lastName.toLowerCase()).includes(search));}).map(function(current){return/*#__PURE__*/_jsxs(\"div\",{className:\"display_content\",children:[/*#__PURE__*/_jsx(\"img\",{className:\"profile_pic_student\",src:current.pic,alt:\"profile_pic\"}),/*#__PURE__*/_jsxs(\"h1\",{className:\"name_student\",children:[current.firstName,\" \",current.lastName]}),/*#__PURE__*/_jsxs(\"p\",{className:\"email\",children:[\"Email: \",current.email]}),/*#__PURE__*/_jsxs(\"p\",{className:\"company\",children:[\"Company: \",current.company]}),/*#__PURE__*/_jsxs(\"p\",{className:\"skill\",children:[\"Skill: \",current.skill]}),/*#__PURE__*/_jsxs(\"p\",{className:\"average\",children:[\"Average: \",current.grades.reduce(function(prev,current){return parseInt(prev,10)+parseInt(current,10);})/current.grades.length,\"%\"]}),/*#__PURE__*/_jsx(Expand,{grades:current.grades,index:students.indexOf(current)}),/*#__PURE__*/_jsx(Tag,{handleTags:handleTags,index:students.indexOf(current),currenttag:current.tags})]},current.id);})]});}export default Main;","map":{"version":3,"sources":["/Users/AngaragT/Desktop/Portfolio/src/FunComponent/Hatchways/Main.js"],"names":["React","useEffect","useState","Expand","Tag","Main","students","setStudents","search","setSearch","searchtag","setSearchTag","fetch","then","response","json","map","c","indexOf","handleTags","taglist","index","tags","e","target","value","filter","student","join","includes","firstName","toLowerCase","lastName","concat","current","pic","email","company","skill","grades","reduce","prev","parseInt","length","id"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport Expand from \"./Expand\"\nimport Tag from \"./Tag\"\n\nfunction Main(){\n    const [students, setStudents] = useState([])\n    const [search, setSearch] = useState('')\n    const [searchtag, setSearchTag] = useState('')\n    // const [array, setArray] = useState()\n    useEffect(() => {\n        fetch('https://api.hatchways.io/assessment/students')\n            .then(response => response.json())\n            .then((response )=>{\n                // response['tags'] = []\n                // setArray(response)\n               \n                response.students.map(c=>response.students[response.students.indexOf(c)]['tags']=[''])\n                setStudents(response.students)\n                \n            })\n\n        \n    },[])\n\n    // const handleChange = (e) =>{\n    //     setTag(e.target.value)\n    // }\n    const handleTags = (taglist, index) =>{\n        // array.tags = taglist\n        // console.log(array)\n      \n        students[index].tags = taglist\n   \n    }\n\n    return(\n        <div className = \"display_box\">\n            <input className = \"name_search\" type = \"text\" placeholder = \"Search by name\" onChange = {e =>setSearch(e.target.value)}/>\n            <input className = \"tag_search\" type = 'text' placeholder = 'Search by tag' onChange = {e =>setSearchTag(e.target.value)}/>\n\n{/* \n                {students.filter(student => student.firstName.toLowerCase().includes(search) + student.lastName.toLowerCase().includes(search) \n                || student.firstName.toLowerCase().concat(\" \"+student.lastName.toLowerCase()).includes(search) \n                || student.tags.includes(searchtag)) */}\n\n                {/* {console.log(students.filter(student => student.firstName.toLowerCase().includes(search) + student.lastName.toLowerCase().includes(search)|| student.firstName.toLowerCase().concat(\" \"+student.lastName.toLowerCase()).includes(search)))} */}\n\n                {/* {console.log(students.filter(student => student.tags.join().includes(searchtag)))} */}\n                {students.filter(student => student.tags.join().includes(searchtag)\n                && (student.firstName.toLowerCase().includes(search)+ student.lastName.toLowerCase().includes(search)\n                || student.firstName.toLowerCase().concat(\" \"+student.lastName.toLowerCase()).includes(search))\n                ).map((current)=>\n                    <div key = {current.id} className = \"display_content\">\n                        <img className = \"profile_pic_student\"src = {current.pic} alt = \"profile_pic\"/> \n                        <h1 className = \"name_student\">{current.firstName} {current.lastName}</h1>\n                        <p className = 'email'>Email: {current.email}</p>\n                        <p className = 'company'>Company: {current.company}</p>\n                        <p className = 'skill'>Skill: {current.skill}</p>\n                        <p className = 'average'>Average: {current.grades.reduce((prev,current)=>parseInt(prev,10)+parseInt(current,10))/current.grades.length}%</p>\n                        <Expand grades = {current.grades} index = {students.indexOf(current)}/>\n\n                        <Tag handleTags = {handleTags} index = {students.indexOf(current)} currenttag = {current.tags}/>\n                        {/* <p>{tag}</p>\n                        <input type = 'text' onChange = {handleChange} placeholder = \"Add a tag\"/> */}\n                    </div>)}\n\n        </div>\n    )\n\n\n\n}\nexport default Main"]},"metadata":{},"sourceType":"module"}