{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _slicedToArray from\"/Users/AngaragT/Desktop/Portfolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{RiCalendarTodoFill}from'react-icons/ri';import JugPuzzle from\"./JugPuzzle\";import Main from\"../FunComponent/Hatchways/Main\";import CurrencyExchange from'./Conversions/CurrencyExchange';import OtherConversions from'./Conversions/OtherConversions';// class AgendaProject extends Component{\n//     constructor(){\n//         super()\n//         this.state = {\n//             task: \"\",\n//             list: [],\n//             id: 1,\n//             isChecked: false,\n//             message: \"\"\n//         }\n//         this.handleChange = this.handleChange.bind(this)\n//         this.handleSubmit = this.handleSubmit.bind(this)\n//         this.handleClear = this.handleClear.bind(this)\n//         this.handleOverflow =  this.handleOverflow.bind(this)\n//     }\n//     handleChange(event){\n//         const{name, value, type} = event.target\n//         type === \"checkbox\" ?\n//         this.setState({\n//             [name]: true     \n//         }):\n//         this.setState({\n//             [name] : value,\n//         })\n//     }\n//     handleSubmit(event){\n//         if(this.state.task !== \"\" && this.state.time !== \"\"){\n//             this.setState({\n//                 id: this.state.id + 1,\n//                 task: \"\",\n//                 message:\"\",\n//                 list: this.state.list.concat([{id: this.state.id, \n//                                 value:  this.state.task, \n//                                 completed: this.state.isChecked}]),\n//             })\n//         }else{\n//             this.setState({\n//                 message: \"Please enter a task.\"\n//             })\n//         }\n//         event.preventDefault()\n//        /*  how to catch no entry */\n//     }\n//     handleClear(event){\n//         this.setState({\n//             task: \"\",\n//             list: [],\n//             id: 1,\n//         })\n//         event.preventDefault()\n//     }\n//     handleOverflow(){\n//         this.setState({\n//             list:[]\n//         })\n//     }\n//     render(){\n//         return(\n//             <div id = \"agendaproject\" className = \"agenda_project\">\n//                 <form className = \"agenda-form\" onSubmit = {this.handleSubmit}>\n//                     <h1 className=\"h1_agenda\">Agenda <RiCalendarTodoFill/></h1>\n//                     <input className = \"task_input\"\n//                         type = \"text\"\n//                         value = {this.state.task}\n//                         name = \"task\"\n//                         placeholder = \"Enter Task\" \n//                         onChange = {this.handleChange}\n//                     />\n//                     <div className = 'button-wrapper'>\n//                         <button className = \"button_add\" type = \"submit\"> Add </button>\n//                         <button className = \"button_clear\" onClick = {this.handleClear}> Clear </button>\n//                     </div>\n//                 </form>\n//                 <div className = \"display_todo\">\n//                     <p>{this.state.message}</p>\n//                     {this.state.list.length < 14 ? this.state.list.map((item)=> \n//                         <ul key = {item.id}>\n//                         <input type = \"Checkbox\"\n//                             name = \"isChecked\"\n//                             value = {this.state.isChecked}\n//                             onChange = {this.handleChange}\n//                             />\n//                             {item.value}\n//                         </ul>\n//                     )  : this.handleOverflow()}\n//                     {console.log(this.state.list)}\n//                 </div>\n//                 <JugPuzzle/>\n//                 <Main/>\n//                 <CurrencyExchange/>\n//                 <OtherConversions/>\n//             </div>\n//         )\n//     }\n// }\n// export default AgendaProject\nfunction AgendaProject(){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),task=_useState2[0],setTask=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),tasklist=_useState4[0],setTaskList=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),message=_useState6[0],setMessage=_useState6[1];var _useState7=useState(1),_useState8=_slicedToArray(_useState7,2),id=_useState8[0],setId=_useState8[1];var handleClear=function handleClear(event){setTask('');setTaskList([]);setId(1);setMessage('');event.preventDefault();};var handleOverflow=function handleOverflow(){setTaskList([]);setMessage('');};var handleChange=function handleChange(event){event.preventDefault();if(task!==\"\"){setId(id+1);setTaskList(tasklist.concat({id:id,value:task}));setTask('');}else{setMessage(\"Please enter a task\");}};return/*#__PURE__*/_jsxs(\"div\",{id:\"agendaproject\",className:\"agenda_project\",children:[/*#__PURE__*/_jsxs(\"form\",{className:\"agenda-form\",children:[/*#__PURE__*/_jsxs(\"h1\",{className:\"h1_agenda\",children:[\"Agenda \",/*#__PURE__*/_jsx(RiCalendarTodoFill,{})]}),/*#__PURE__*/_jsx(\"input\",{className:\"task_input\",type:\"text\",value:task,placeholder:\"Enter Task\",onChange:function onChange(e){return setTask(e.target.value);}}),/*#__PURE__*/_jsxs(\"div\",{className:\"button-wrapper\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"button_add\",onClick:handleChange,children:\" Add \"}),/*#__PURE__*/_jsx(\"button\",{className:\"button_clear\",onClick:handleClear,children:\" Clear \"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"display_todo\",children:[/*#__PURE__*/_jsx(\"p\",{children:message}),tasklist.length<14?tasklist.map(function(item){return/*#__PURE__*/_jsx(\"ul\",{children:item.value},item.id);}):handleOverflow()]}),/*#__PURE__*/_jsx(JugPuzzle,{}),/*#__PURE__*/_jsx(Main,{}),/*#__PURE__*/_jsx(CurrencyExchange,{}),/*#__PURE__*/_jsx(OtherConversions,{})]});}export default AgendaProject;","map":{"version":3,"sources":["/Users/AngaragT/Desktop/Portfolio/src/FunComponent/AgendaProject.js"],"names":["React","useState","RiCalendarTodoFill","JugPuzzle","Main","CurrencyExchange","OtherConversions","AgendaProject","task","setTask","tasklist","setTaskList","message","setMessage","id","setId","handleClear","event","preventDefault","handleOverflow","handleChange","concat","value","e","target","length","map","item"],"mappings":"gPAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,KAA8B,OAA9B,CACA,OAAQC,kBAAR,KAAiC,gBAAjC,CACA,MAAOC,CAAAA,SAAP,KAAsB,aAAtB,CACA,MAAOC,CAAAA,IAAP,KAAiB,gCAAjB,CACA,MAAOC,CAAAA,gBAAP,KAA6B,gCAA7B,CACA,MAAOC,CAAAA,gBAAP,KAA6B,gaAAT,EAAwB,eAEGN,QAAQ,CAAC,EAAD,CAFX,wCAEdO,IAFc,eAERC,OAFQ,8BAGWR,QAAQ,CAAC,EAAD,CAHnB,yCAGdS,QAHc,eAGJC,WAHI,8BAISV,QAAQ,CAAC,EAAD,CAJjB,yCAIdW,OAJc,eAILC,UAJK,8BAKDZ,QAAQ,CAAC,CAAD,CALP,yCAKda,EALc,eAKVC,KALU,eAQpB,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,KAAD,CAAU,CAC1BR,OAAO,CAAC,EAAD,CAAP,CACAE,WAAW,CAAC,EAAD,CAAX,CACAI,KAAK,CAAC,CAAD,CAAL,CACAF,UAAU,CAAC,EAAD,CAAV,CACAI,KAAK,CAACC,cAAN,GACH,CAND,CAOA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAK,CACxBR,WAAW,CAAC,EAAD,CAAX,CACAE,UAAU,CAAC,EAAD,CAAV,CACH,CAHD,CAKA,GAAMO,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACH,KAAD,CAAU,CAC3BA,KAAK,CAACC,cAAN,GAEA,GAAGV,IAAI,GAAK,EAAZ,CAAe,CACXO,KAAK,CAACD,EAAE,CAAC,CAAJ,CAAL,CACAH,WAAW,CAACD,QAAQ,CAACW,MAAT,CAAgB,CAACP,EAAE,CAACA,EAAJ,CAAOQ,KAAK,CAACd,IAAb,CAAhB,CAAD,CAAX,CACAC,OAAO,CAAC,EAAD,CAAP,CACH,CAJD,IAMI,CACAI,UAAU,CAAC,qBAAD,CAAV,CACH,CAEJ,CAbD,CAeA,mBAEI,aAAK,EAAE,CAAG,eAAV,CAA0B,SAAS,CAAG,gBAAtC,wBAEI,cAAM,SAAS,CAAG,aAAlB,wBACI,YAAI,SAAS,CAAC,WAAd,kCAAiC,KAAC,kBAAD,IAAjC,GADJ,cAGQ,cAAO,SAAS,CAAG,YAAnB,CACI,IAAI,CAAG,MADX,CAEI,KAAK,CAAIL,IAFb,CAGI,WAAW,CAAG,YAHlB,CAII,QAAQ,CAAI,kBAAAe,CAAC,QAAEd,CAAAA,OAAO,CAACc,CAAC,CAACC,MAAF,CAASF,KAAV,CAAT,EAJjB,EAHR,cASQ,aAAK,SAAS,CAAG,gBAAjB,wBACI,eAAQ,SAAS,CAAG,YAApB,CAAiC,OAAO,CAAIF,YAA5C,mBADJ,cAEI,eAAQ,SAAS,CAAG,cAApB,CAAmC,OAAO,CAAIJ,WAA9C,qBAFJ,GATR,GAFJ,cAiBI,aAAK,SAAS,CAAG,cAAjB,wBAEI,mBAAIJ,OAAJ,EAFJ,CAISF,QAAQ,CAACe,MAAT,CAAkB,EAAlB,CAAuBf,QAAQ,CAACgB,GAAT,CAAa,SAACC,IAAD,qBACjC,oBAEKA,IAAI,CAACL,KAFV,EAAWK,IAAI,CAACb,EAAhB,CADiC,EAAb,CAAvB,CAMQK,cAAc,EAV/B,GAjBJ,cA6BI,KAAC,SAAD,IA7BJ,cA8BI,KAAC,IAAD,IA9BJ,cA+BI,KAAC,gBAAD,IA/BJ,cAgCI,KAAC,gBAAD,IAhCJ,GAFJ,CAsCH,CACD,cAAeZ,CAAAA,aAAf","sourcesContent":["import React, {useState} from 'react'\nimport {RiCalendarTodoFill} from 'react-icons/ri'\nimport JugPuzzle from \"./JugPuzzle\"\nimport Main from \"../FunComponent/Hatchways/Main\"\nimport CurrencyExchange from './Conversions/CurrencyExchange'\nimport OtherConversions from './Conversions/OtherConversions'\n// class AgendaProject extends Component{\n//     constructor(){\n//         super()\n//         this.state = {\n          \n//             task: \"\",\n//             list: [],\n//             id: 1,\n//             isChecked: false,\n//             message: \"\"\n            \n//         }\n        \n//         this.handleChange = this.handleChange.bind(this)\n//         this.handleSubmit = this.handleSubmit.bind(this)\n//         this.handleClear = this.handleClear.bind(this)\n//         this.handleOverflow =  this.handleOverflow.bind(this)\n//     }\n\n//     handleChange(event){\n        \n//         const{name, value, type} = event.target\n        \n//         type === \"checkbox\" ?\n//         this.setState({\n//             [name]: true     \n//         }):\n       \n//         this.setState({\n//             [name] : value,\n           \n//         })\n//     }\n\n//     handleSubmit(event){\n        \n//         if(this.state.task !== \"\" && this.state.time !== \"\"){\n//             this.setState({\n//                 id: this.state.id + 1,\n//                 task: \"\",\n//                 message:\"\",\n//                 list: this.state.list.concat([{id: this.state.id, \n//                                 value:  this.state.task, \n//                                 completed: this.state.isChecked}]),\n                \n            \n//             })\n            \n//         }else{\n//             this.setState({\n//                 message: \"Please enter a task.\"\n//             })\n//         }\n//         event.preventDefault()\n//        /*  how to catch no entry */\n//     }\n    \n//     handleClear(event){\n        \n//         this.setState({\n            \n//             task: \"\",\n//             list: [],\n//             id: 1,\n//         })\n//         event.preventDefault()\n//     }\n//     handleOverflow(){\n//         this.setState({\n//             list:[]\n//         })\n//     }\n    \n\n//     render(){\n        \n//         return(\n            \n//             <div id = \"agendaproject\" className = \"agenda_project\">\n            \n//                 <form className = \"agenda-form\" onSubmit = {this.handleSubmit}>\n//                     <h1 className=\"h1_agenda\">Agenda <RiCalendarTodoFill/></h1>\n\n//                     <input className = \"task_input\"\n//                         type = \"text\"\n//                         value = {this.state.task}\n//                         name = \"task\"\n//                         placeholder = \"Enter Task\" \n//                         onChange = {this.handleChange}\n//                     />\n//                     <div className = 'button-wrapper'>\n//                         <button className = \"button_add\" type = \"submit\"> Add </button>\n//                         <button className = \"button_clear\" onClick = {this.handleClear}> Clear </button>\n//                     </div>\n//                 </form>\n              \n//                 <div className = \"display_todo\">\n                    \n//                     <p>{this.state.message}</p>\n                     \n//                     {this.state.list.length < 14 ? this.state.list.map((item)=> \n//                         <ul key = {item.id}>\n                       \n//                         <input type = \"Checkbox\"\n                            \n//                             name = \"isChecked\"\n//                             value = {this.state.isChecked}\n//                             onChange = {this.handleChange}\n                            \n//                             />\n                           \n//                             {item.value}\n                            \n               \n//                         </ul>\n                        \n//                     )  : this.handleOverflow()}\n//                     {console.log(this.state.list)}\n//                 </div>\n//                 <JugPuzzle/>\n//                 <Main/>\n//                 <CurrencyExchange/>\n//                 <OtherConversions/>\n//             </div>\n//         )\n            \n        \n//     }\n        \n// }\n// export default AgendaProject\n\nfunction AgendaProject(){\n    \n    const[task, setTask] = useState('')\n    const[tasklist, setTaskList] = useState([])\n    const[message, setMessage] = useState('')\n    const[id, setId] = useState(1)\n\n    \n    const handleClear = (event) =>{\n        setTask('')\n        setTaskList([])\n        setId(1)\n        setMessage('')\n        event.preventDefault()\n    }\n    const handleOverflow = () =>{\n        setTaskList([])\n        setMessage('')\n    }\n\n    const handleChange = (event) =>{\n        event.preventDefault()\n        \n        if(task !== \"\"){\n            setId(id+1)\n            setTaskList(tasklist.concat({id:id,value:task}))\n            setTask('')\n        }\n        \n        else{\n            setMessage(\"Please enter a task\")\n        }\n\n    }\n\n    return(\n        \n        <div id = \"agendaproject\" className = \"agenda_project\">\n            \n            <form className = \"agenda-form\" >\n                <h1 className=\"h1_agenda\">Agenda <RiCalendarTodoFill/></h1>\n            \n                    <input className = \"task_input\"\n                        type = \"text\"\n                        value = {task}\n                        placeholder = \"Enter Task\" \n                        onChange = {e=>setTask(e.target.value)}\n                        />\n                    <div className = 'button-wrapper'>\n                        <button className = \"button_add\" onClick = {handleChange}> Add </button>\n                        <button className = \"button_clear\" onClick = {handleClear}> Clear </button>\n                    </div>\n            </form>\n                          \n            <div className = \"display_todo\">\n                                \n                <p>{message}</p>\n               \n                    {tasklist.length < 14 ? tasklist.map((item)=> \n                        <ul key = {item.id}>\n                                   \n                            {item.value}\n                            \n                        </ul>\n                        )  : handleOverflow()}\n            </div>\n            <JugPuzzle/>\n            <Main/>\n            <CurrencyExchange/>\n            <OtherConversions/>\n        </div>\n       \n    )\n}\nexport default AgendaProject"]},"metadata":{},"sourceType":"module"}