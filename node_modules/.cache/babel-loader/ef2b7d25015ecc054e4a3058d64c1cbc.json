{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/AngaragT/Desktop/Portfolio/src/FunComponent/CurrencyExchange.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Button, Form } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction CurrencyExchange() {\n  _s();\n\n  const [response, setResponse] = useState([]);\n  const [rates, setRates] = useState([]);\n  const [fromCurrency, setFromCurrency] = useState('');\n  const [toCurrency, setToCurrency] = useState('');\n  const [amount, setAmount] = useState('');\n  const [converted, setConverted] = useState('');\n  const [errorM, setErrorM] = useState('');\n  useEffect(() => {\n    if (fromCurrency !== \"\") {\n      fetch('https://api.exchangeratesapi.io/latest'.concat('?base=' + fromCurrency)).then(r => r.json()).then(r => {\n        setResponse(r);\n        setRates(r.rates);\n      });\n    } else {\n      fetch('https://api.exchangeratesapi.io/latest').then(r => r.json()).then(r => {\n        setResponse(r);\n        setRates(r.rates);\n        setFromCurrency(r.base);\n        setToCurrency('CAD');\n      });\n    }\n  }, [fromCurrency]);\n\n  const handleClick = event => {\n    if (amount !== '') {\n      setErrorM('');\n      setConverted(parseFloat(amount * rates[toCurrency]).toFixed(2));\n    } else {\n      setErrorM('Enter amount to convert');\n    }\n\n    event.preventDefault();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"currency_exchange\",\n    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"h2ce\",\n      children: \"Currency Exchange\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CurrencyExchange, \"YdPLKHjVucnBzcIVoLyRfylYUpo=\");\n\n_c = CurrencyExchange;\nexport default CurrencyExchange;\n\nvar _c;\n\n$RefreshReg$(_c, \"CurrencyExchange\");","map":{"version":3,"sources":["/Users/AngaragT/Desktop/Portfolio/src/FunComponent/CurrencyExchange.js"],"names":["React","useEffect","useState","Button","Form","CurrencyExchange","response","setResponse","rates","setRates","fromCurrency","setFromCurrency","toCurrency","setToCurrency","amount","setAmount","converted","setConverted","errorM","setErrorM","fetch","concat","then","r","json","base","handleClick","event","parseFloat","toFixed","preventDefault"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,MAAR,EAAgBC,IAAhB,QAA2B,iBAA3B;AACA,OAAO,sCAAP;;AAEA,SAASC,gBAAT,GAA2B;AAAA;;AACvB,QAAK,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,EAAD,CAAvC;AACA,QAAK,CAACM,KAAD,EAAOC,QAAP,IAAmBP,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAK,CAACQ,YAAD,EAAcC,eAAd,IAAiCT,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAK,CAACU,UAAD,EAAYC,aAAZ,IAA6BX,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAK,CAACY,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAAC,EAAD,CAAnC;AACA,QAAK,CAACc,SAAD,EAAYC,YAAZ,IAA4Bf,QAAQ,CAAC,EAAD,CAAzC;AACA,QAAK,CAACgB,MAAD,EAASC,SAAT,IAAsBjB,QAAQ,CAAC,EAAD,CAAnC;AACAD,EAAAA,SAAS,CAAC,MAAI;AAEV,QAAGS,YAAY,KAAG,EAAlB,EAAqB;AAEjBU,MAAAA,KAAK,CAAC,yCAAyCC,MAAzC,CAAgD,WAASX,YAAzD,CAAD,CAAL,CACKY,IADL,CACUC,CAAC,IAAEA,CAAC,CAACC,IAAF,EADb,EAEKF,IAFL,CAEWC,CAAD,IAAK;AACPhB,QAAAA,WAAW,CAACgB,CAAD,CAAX;AACAd,QAAAA,QAAQ,CAACc,CAAC,CAACf,KAAH,CAAR;AACH,OALL;AAMC,KARL,MASI;AACAY,MAAAA,KAAK,CAAC,wCAAD,CAAL,CACKE,IADL,CACUC,CAAC,IAAEA,CAAC,CAACC,IAAF,EADb,EAEKF,IAFL,CAEWC,CAAD,IAAK;AACPhB,QAAAA,WAAW,CAACgB,CAAD,CAAX;AACAd,QAAAA,QAAQ,CAACc,CAAC,CAACf,KAAH,CAAR;AACAG,QAAAA,eAAe,CAACY,CAAC,CAACE,IAAH,CAAf;AACAZ,QAAAA,aAAa,CAAC,KAAD,CAAb;AAEH,OARL;AASH;AAEJ,GAvBQ,EAuBP,CAACH,YAAD,CAvBO,CAAT;;AAyBA,QAAMgB,WAAW,GAAIC,KAAD,IAAU;AAC1B,QAAGb,MAAM,KAAK,EAAd,EAAiB;AACbK,MAAAA,SAAS,CAAC,EAAD,CAAT;AACAF,MAAAA,YAAY,CAACW,UAAU,CAACd,MAAM,GAACN,KAAK,CAACI,UAAD,CAAb,CAAV,CAAqCiB,OAArC,CAA6C,CAA7C,CAAD,CAAZ;AAEH,KAJD,MAIK;AACDV,MAAAA,SAAS,CAAC,yBAAD,CAAT;AACH;;AAEDQ,IAAAA,KAAK,CAACG,cAAN;AAIH,GAbD;;AAgBA,sBAEI;AAAK,IAAA,SAAS,EAAG,mBAAjB;AAAA,2BACI;AAAI,MAAA,SAAS,EAAG,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UAFJ;AAWH;;GA5DQzB,gB;;KAAAA,gB;AA8DT,eAAeA,gBAAf","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport {Button, Form} from 'react-bootstrap'\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nfunction CurrencyExchange(){\n    const[response, setResponse] = useState([])\n    const[rates,setRates] = useState([])\n    const[fromCurrency,setFromCurrency] = useState('')\n    const[toCurrency,setToCurrency] = useState('')\n    const[amount, setAmount] = useState('')\n    const[converted, setConverted] = useState('')\n    const[errorM, setErrorM] = useState('')\n    useEffect(()=>{\n\n        if(fromCurrency!==\"\"){\n\n            fetch('https://api.exchangeratesapi.io/latest'.concat('?base='+fromCurrency))\n                .then(r=>r.json())\n                .then((r)=>{\n                    setResponse(r)\n                    setRates(r.rates)\n                })\n            }\n        else{\n            fetch('https://api.exchangeratesapi.io/latest')\n                .then(r=>r.json())\n                .then((r)=>{\n                    setResponse(r)\n                    setRates(r.rates)\n                    setFromCurrency(r.base)\n                    setToCurrency('CAD')\n\n                })\n        }\n\n    },[fromCurrency])\n\n    const handleClick = (event) =>{\n        if(amount !== ''){\n            setErrorM('')\n            setConverted(parseFloat(amount*rates[toCurrency]).toFixed(2))\n            \n        }else{\n            setErrorM('Enter amount to convert')\n        }\n            \n        event.preventDefault()\n\n            \n        \n    }\n    \n\n    return(\n        \n        <div className = 'currency_exchange'>\n            <h2 className = 'h2ce'>Currency Exchange</h2>\n            \n            \n            \n        </div>\n       \n       \n    )\n}\n\nexport default CurrencyExchange"]},"metadata":{},"sourceType":"module"}