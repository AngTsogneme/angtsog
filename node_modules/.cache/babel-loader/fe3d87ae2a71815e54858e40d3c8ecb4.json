{"ast":null,"code":"import _defineProperty from\"/Users/AngaragT/Desktop/Portfolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/Users/AngaragT/Desktop/Portfolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/AngaragT/Desktop/Portfolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/Users/AngaragT/Desktop/Portfolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/AngaragT/Desktop/Portfolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/AngaragT/Desktop/Portfolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{RiCalendarTodoFill}from'react-icons/ri';var AgendaProject=/*#__PURE__*/function(_Component){_inherits(AgendaProject,_Component);var _super=_createSuper(AgendaProject);function AgendaProject(){var _this;_classCallCheck(this,AgendaProject);_this=_super.call(this);_this.state={time:\"\",task:\"\",list:[],id:1,isChecked:false};_this.handleChange=_this.handleChange.bind(_assertThisInitialized(_this));_this.handleSubmit=_this.handleSubmit.bind(_assertThisInitialized(_this));_this.handleClear=_this.handleClear.bind(_assertThisInitialized(_this));_this.handleOverflow=_this.handleOverflow.bind(_assertThisInitialized(_this));return _this;}_createClass(AgendaProject,[{key:\"handleChange\",value:function handleChange(event){var _event$target=event.target,name=_event$target.name,value=_event$target.value,type=_event$target.type,checked=_event$target.checked;type===\"checkbox\"&&this.state.list.task===name?this.setState(_defineProperty({},name,checked)):this.setState(_defineProperty({},name,value));}},{key:\"handleSubmit\",value:function handleSubmit(event){this.setState({id:this.state.id+1,task:\"\",time:\"\",list:this.state.list.concat([{id:this.state.id,value:this.state.time+\": \"+this.state.task,completed:this.state.isChecked}])});event.preventDefault();/*  how to catch no entry */}},{key:\"handleClear\",value:function handleClear(event){this.setState({time:\"\",task:\"\",list:[],id:1});event.preventDefault();}},{key:\"handleOverflow\",value:function handleOverflow(){this.setState({list:[]});}},{key:\"render\",value:function render(){var _this2=this;return/*#__PURE__*/React.createElement(\"div\",{id:\"agendaproject\",className:\"agenda_project\"},/*#__PURE__*/React.createElement(\"form\",{className:\"agenda-form\",onSubmit:this.handleSubmit},/*#__PURE__*/React.createElement(\"h1\",{className:\"h1_agenda\"},\"Agenda \",/*#__PURE__*/React.createElement(RiCalendarTodoFill,null)),/*#__PURE__*/React.createElement(\"select\",{className:\"select_time\",value:this.state.time,onChange:this.handleChange,name:\"time\"},/*#__PURE__*/React.createElement(\"option\",{value:\"Select\"},\"Select Time\"),/*#__PURE__*/React.createElement(\"option\",{value:\"12am\"},\"12am\"),/*#__PURE__*/React.createElement(\"option\",{value:\"1am\"},\"1am\"),/*#__PURE__*/React.createElement(\"option\",{value:\"2am\"},\"2am\"),/*#__PURE__*/React.createElement(\"option\",{value:\"3am\"},\"3am\"),/*#__PURE__*/React.createElement(\"option\",{value:\"4am\"},\"4am\"),/*#__PURE__*/React.createElement(\"option\",{value:\"5am\"},\"5am\"),/*#__PURE__*/React.createElement(\"option\",{value:\"6am\"},\"6am\"),/*#__PURE__*/React.createElement(\"option\",{value:\"7am\"},\"7am\"),/*#__PURE__*/React.createElement(\"option\",{value:\"8am\"},\"8am\"),/*#__PURE__*/React.createElement(\"option\",{value:\"9am\"},\"9am\"),/*#__PURE__*/React.createElement(\"option\",{value:\"10am\"},\"10am\"),/*#__PURE__*/React.createElement(\"option\",{value:\"11am\"},\"11pm\"),/*#__PURE__*/React.createElement(\"option\",{value:\"12pm\"},\"12pm\"),/*#__PURE__*/React.createElement(\"option\",{value:\"1pm\"},\"1pm\"),/*#__PURE__*/React.createElement(\"option\",{value:\"2pm\"},\"2pm\"),/*#__PURE__*/React.createElement(\"option\",{value:\"3pm\"},\"3pm\"),/*#__PURE__*/React.createElement(\"option\",{value:\"4pm\"},\"4pm\"),/*#__PURE__*/React.createElement(\"option\",{value:\"5pm\"},\"5pm\"),/*#__PURE__*/React.createElement(\"option\",{value:\"6pm\"},\"6pm\"),/*#__PURE__*/React.createElement(\"option\",{value:\"7pm\"},\"7pm\"),/*#__PURE__*/React.createElement(\"option\",{value:\"8pm\"},\"8pm\"),/*#__PURE__*/React.createElement(\"option\",{value:\"9pm\"},\"9pm\"),/*#__PURE__*/React.createElement(\"option\",{value:\"10pm\"},\"10pm\"),/*#__PURE__*/React.createElement(\"option\",{value:\"11pm\"},\"11pm\")),/*#__PURE__*/React.createElement(\"input\",{className:\"task_input\",type:\"text\",value:this.state.task,name:\"task\",placeholder:\"Enter Task\",onChange:this.handleChange}),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"button\",{className:\"button_add\",type:\"submit\"},\" Add \"),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"button\",{className:\"button_clear\",onClick:this.handleClear},\" Clear \")),/*#__PURE__*/React.createElement(\"div\",{className:\"display_todo\"},this.state.list.length<14?this.state.list.map(function(item){return/*#__PURE__*/React.createElement(\"label\",{key:item.id},/*#__PURE__*/React.createElement(\"input\",{type:\"Checkbox\",name:\"isChecked\",checked:_this2.state.list.completed,onChange:_this2.handleChange}),item.value,/*#__PURE__*/React.createElement(\"br\",null));}):this.handleOverflow()));}}]);return AgendaProject;}(Component);export default AgendaProject;","map":{"version":3,"sources":["/Users/AngaragT/Desktop/Portfolio/src/FunComponent/AgendaProject.js"],"names":["React","Component","RiCalendarTodoFill","AgendaProject","state","time","task","list","id","isChecked","handleChange","bind","handleSubmit","handleClear","handleOverflow","event","target","name","value","type","checked","setState","concat","completed","preventDefault","length","map","item"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport {RiCalendarTodoFill} from 'react-icons/ri'\n\nclass AgendaProject extends Component{\n    constructor(){\n        super()\n        this.state = {\n            time: \"\",\n            task: \"\",\n            list: [],\n            id: 1,\n            isChecked: false\n            \n        }\n        \n        this.handleChange = this.handleChange.bind(this)\n        this.handleSubmit = this.handleSubmit.bind(this)\n        this.handleClear = this.handleClear.bind(this)\n        this.handleOverflow =  this.handleOverflow.bind(this)\n    }\n\n    handleChange(event){\n        const{name, value, type, checked} = event.target\n\n        type === \"checkbox\" && this.state.list.task === name?\n        this.setState({\n            [name]: checked     \n        }):\n\n        this.setState({\n            [name] : value,\n           \n        })\n    }\n\n    handleSubmit(event){\n        \n        \n        this.setState({\n            id: this.state.id + 1,\n            task: \"\",\n            time: \"\",\n            list: this.state.list.concat([{id: this.state.id, \n                            value: this.state.time + \": \" + this.state.task, \n                            completed: this.state.isChecked}]),\n           \n        })\n        \n\n        event.preventDefault()\n       /*  how to catch no entry */\n    }\n    \n    handleClear(event){\n        \n        this.setState({\n            time: \"\",\n            task: \"\",\n            list: [],\n            id: 1,\n        })\n        event.preventDefault()\n    }\n    handleOverflow(){\n        this.setState({\n            list:[]\n        })\n    }\n\n    render(){\n        \n        return(\n            \n            <div id = \"agendaproject\" className = \"agenda_project\">\n            \n                <form className = \"agenda-form\" onSubmit = {this.handleSubmit}>\n                    <h1 className=\"h1_agenda\">Agenda <RiCalendarTodoFill/></h1>\n                    \n                    <select className = \"select_time\"\n                        value = {this.state.time}\n                        onChange = {this.handleChange}\n                        name = \"time\">\n                        \n                        <option value = \"Select\">Select Time</option>\n                        <option value = \"12am\">12am</option>\n                        <option value = \"1am\">1am</option>\n                        <option value = \"2am\">2am</option>\n                        <option value = \"3am\">3am</option>\n                        <option value = \"4am\">4am</option>\n                        <option value = \"5am\">5am</option>\n                        <option value = \"6am\">6am</option>\n                        <option value = \"7am\">7am</option>\n                        <option value = \"8am\">8am</option>\n                        <option value = \"9am\">9am</option>\n                        <option value = \"10am\">10am</option>\n                        <option value = \"11am\">11pm</option>\n                        <option value = \"12pm\">12pm</option>\n                        <option value = \"1pm\">1pm</option>\n                        <option value = \"2pm\">2pm</option>\n                        <option value = \"3pm\">3pm</option>\n                        <option value = \"4pm\">4pm</option>\n                        <option value = \"5pm\">5pm</option>\n                        <option value = \"6pm\">6pm</option>\n                        <option value = \"7pm\">7pm</option>\n                        <option value = \"8pm\">8pm</option>\n                        <option value = \"9pm\">9pm</option>\n                        <option value = \"10pm\">10pm</option>\n                        <option value = \"11pm\">11pm</option>\n\n                    </select>\n                \n           \n                    <input className = \"task_input\"\n                        type = \"text\"\n                        value = {this.state.task}\n                        name = \"task\"\n                        placeholder = \"Enter Task\" \n                        onChange = {this.handleChange}\n                    />\n                    <br/>\n                    <button className = \"button_add\" type = \"submit\"> Add </button>\n                    <br/>\n                    <button className = \"button_clear\" onClick = {this.handleClear}> Clear </button>\n                </form>\n                \n                <div className = \"display_todo\">\n                    \n\n                     \n                    {this.state.list.length < 14 ? this.state.list.map((item)=> \n                    \n                        <label key = {item.id}>\n                        <input type = \"Checkbox\"\n                            \n                            name = \"isChecked\"\n                            checked = {this.state.list.completed}\n                            onChange = {this.handleChange}\n                            \n                            />\n                            {item.value}\n                            <br/>\n                        </label>\n                        \n                        \n                    )  : this.handleOverflow()}\n\n                </div>\n          \n            </div>\n        )\n            \n        \n    }\n        \n}\nexport default AgendaProject"]},"metadata":{},"sourceType":"module"}