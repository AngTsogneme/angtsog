{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/AngaragT/Desktop/Portfolio/src/FunComponent/AgendaProject.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { RiCalendarTodoFill } from 'react-icons/ri';\nimport JugPuzzle from \"./JugPuzzle\";\nimport Main from \"../FunComponent/Hatchways/Main\";\nimport CurrencyExchange from './Conversions/CurrencyExchange';\nimport OtherConversions from './Conversions/OtherConversions'; // class AgendaProject extends Component{\n//     constructor(){\n//         super()\n//         this.state = {\n//             task: \"\",\n//             list: [],\n//             id: 1,\n//             isChecked: false,\n//             message: \"\"\n//         }\n//         this.handleChange = this.handleChange.bind(this)\n//         this.handleSubmit = this.handleSubmit.bind(this)\n//         this.handleClear = this.handleClear.bind(this)\n//         this.handleOverflow =  this.handleOverflow.bind(this)\n//     }\n//     handleChange(event){\n//         const{name, value, type} = event.target\n//         type === \"checkbox\" ?\n//         this.setState({\n//             [name]: true     \n//         }):\n//         this.setState({\n//             [name] : value,\n//         })\n//     }\n//     handleSubmit(event){\n//         if(this.state.task !== \"\" && this.state.time !== \"\"){\n//             this.setState({\n//                 id: this.state.id + 1,\n//                 task: \"\",\n//                 message:\"\",\n//                 list: this.state.list.concat([{id: this.state.id, \n//                                 value:  this.state.task, \n//                                 completed: this.state.isChecked}]),\n//             })\n//         }else{\n//             this.setState({\n//                 message: \"Please enter a task.\"\n//             })\n//         }\n//         event.preventDefault()\n//        /*  how to catch no entry */\n//     }\n//     handleClear(event){\n//         this.setState({\n//             task: \"\",\n//             list: [],\n//             id: 1,\n//         })\n//         event.preventDefault()\n//     }\n//     handleOverflow(){\n//         this.setState({\n//             list:[]\n//         })\n//     }\n//     render(){\n//         return(\n//             <div id = \"agendaproject\" className = \"agenda_project\">\n//                 <form className = \"agenda-form\" onSubmit = {this.handleSubmit}>\n//                     <h1 className=\"h1_agenda\">Agenda <RiCalendarTodoFill/></h1>\n//                     <input className = \"task_input\"\n//                         type = \"text\"\n//                         value = {this.state.task}\n//                         name = \"task\"\n//                         placeholder = \"Enter Task\" \n//                         onChange = {this.handleChange}\n//                     />\n//                     <div className = 'button-wrapper'>\n//                         <button className = \"button_add\" type = \"submit\"> Add </button>\n//                         <button className = \"button_clear\" onClick = {this.handleClear}> Clear </button>\n//                     </div>\n//                 </form>\n//                 <div className = \"display_todo\">\n//                     <p>{this.state.message}</p>\n//                     {this.state.list.length < 14 ? this.state.list.map((item)=> \n//                         <ul key = {item.id}>\n//                         <input type = \"Checkbox\"\n//                             name = \"isChecked\"\n//                             value = {this.state.isChecked}\n//                             onChange = {this.handleChange}\n//                             />\n//                             {item.value}\n//                         </ul>\n//                     )  : this.handleOverflow()}\n//                     {console.log(this.state.list)}\n//                 </div>\n//                 <JugPuzzle/>\n//                 <Main/>\n//                 <CurrencyExchange/>\n//                 <OtherConversions/>\n//             </div>\n//         )\n//     }\n// }\n// export default AgendaProject\n\nfunction AgendaProject() {\n  _s();\n\n  const {\n    task,\n    setTask\n  } = useState('');\n  const {\n    list,\n    setList\n  } = useState([]);\n  const {\n    isChecked,\n    setChecked\n  } = useState(false);\n  const {\n    message,\n    setMessage\n  } = useState('');\n  const {\n    id,\n    setId\n  } = useState(1);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (task !== \"\") {\n      setList([{\n        id: id,\n        value: task,\n        completed: isChecked\n      }]);\n    } else {\n      setMessage('Please enter a task');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"agendaproject\",\n    className: \"agenda_project\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"agenda-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"h1_agenda\",\n        children: [\"Agenda \", /*#__PURE__*/_jsxDEV(RiCalendarTodoFill, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 50\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"task_input\",\n        type: \"text\",\n        value: task,\n        placeholder: \"Enter Task\",\n        onChange: e => setTask(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button_add\",\n          type: \"submit\",\n          children: \" Add \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button_clear\",\n          onClick: setTask(''),\n          children: \" Clear \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"display_todo\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 17\n      }, this), list.length < 14 ? list.map(item => /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"Checkbox\",\n          name: \"isChecked\",\n          value: isChecked,\n          onChange: setChecked(!checked)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 25\n        }, this), item.value]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 25\n      }, this)) : setTask(''), console.log(list)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(JugPuzzle, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CurrencyExchange, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(OtherConversions, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AgendaProject, \"ycHhiS8Mnth/BOrlz9GzXcDyieY=\");\n\n_c = AgendaProject;\nexport default AgendaProject;\n\nvar _c;\n\n$RefreshReg$(_c, \"AgendaProject\");","map":{"version":3,"sources":["/Users/AngaragT/Desktop/Portfolio/src/FunComponent/AgendaProject.js"],"names":["React","useState","RiCalendarTodoFill","JugPuzzle","Main","CurrencyExchange","OtherConversions","AgendaProject","task","setTask","list","setList","isChecked","setChecked","message","setMessage","id","setId","handleSubmit","event","preventDefault","value","completed","e","target","length","map","item","checked","console","log"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport {RiCalendarTodoFill} from 'react-icons/ri'\nimport JugPuzzle from \"./JugPuzzle\"\nimport Main from \"../FunComponent/Hatchways/Main\"\nimport CurrencyExchange from './Conversions/CurrencyExchange'\nimport OtherConversions from './Conversions/OtherConversions'\n// class AgendaProject extends Component{\n//     constructor(){\n//         super()\n//         this.state = {\n          \n//             task: \"\",\n//             list: [],\n//             id: 1,\n//             isChecked: false,\n//             message: \"\"\n            \n//         }\n        \n//         this.handleChange = this.handleChange.bind(this)\n//         this.handleSubmit = this.handleSubmit.bind(this)\n//         this.handleClear = this.handleClear.bind(this)\n//         this.handleOverflow =  this.handleOverflow.bind(this)\n//     }\n\n//     handleChange(event){\n        \n//         const{name, value, type} = event.target\n        \n//         type === \"checkbox\" ?\n//         this.setState({\n//             [name]: true     \n//         }):\n       \n//         this.setState({\n//             [name] : value,\n           \n//         })\n//     }\n\n//     handleSubmit(event){\n        \n//         if(this.state.task !== \"\" && this.state.time !== \"\"){\n//             this.setState({\n//                 id: this.state.id + 1,\n//                 task: \"\",\n//                 message:\"\",\n//                 list: this.state.list.concat([{id: this.state.id, \n//                                 value:  this.state.task, \n//                                 completed: this.state.isChecked}]),\n                \n            \n//             })\n            \n//         }else{\n//             this.setState({\n//                 message: \"Please enter a task.\"\n//             })\n//         }\n//         event.preventDefault()\n//        /*  how to catch no entry */\n//     }\n    \n//     handleClear(event){\n        \n//         this.setState({\n            \n//             task: \"\",\n//             list: [],\n//             id: 1,\n//         })\n//         event.preventDefault()\n//     }\n//     handleOverflow(){\n//         this.setState({\n//             list:[]\n//         })\n//     }\n    \n\n//     render(){\n        \n//         return(\n            \n//             <div id = \"agendaproject\" className = \"agenda_project\">\n            \n//                 <form className = \"agenda-form\" onSubmit = {this.handleSubmit}>\n//                     <h1 className=\"h1_agenda\">Agenda <RiCalendarTodoFill/></h1>\n\n//                     <input className = \"task_input\"\n//                         type = \"text\"\n//                         value = {this.state.task}\n//                         name = \"task\"\n//                         placeholder = \"Enter Task\" \n//                         onChange = {this.handleChange}\n//                     />\n//                     <div className = 'button-wrapper'>\n//                         <button className = \"button_add\" type = \"submit\"> Add </button>\n//                         <button className = \"button_clear\" onClick = {this.handleClear}> Clear </button>\n//                     </div>\n//                 </form>\n              \n//                 <div className = \"display_todo\">\n                    \n//                     <p>{this.state.message}</p>\n                     \n//                     {this.state.list.length < 14 ? this.state.list.map((item)=> \n//                         <ul key = {item.id}>\n                       \n//                         <input type = \"Checkbox\"\n                            \n//                             name = \"isChecked\"\n//                             value = {this.state.isChecked}\n//                             onChange = {this.handleChange}\n                            \n//                             />\n                           \n//                             {item.value}\n                            \n               \n//                         </ul>\n                        \n//                     )  : this.handleOverflow()}\n//                     {console.log(this.state.list)}\n//                 </div>\n//                 <JugPuzzle/>\n//                 <Main/>\n//                 <CurrencyExchange/>\n//                 <OtherConversions/>\n//             </div>\n//         )\n            \n        \n//     }\n        \n// }\n// export default AgendaProject\n\nfunction AgendaProject(){\n    \n    const{task, setTask} = useState('')\n    const{list, setList} = useState([])\n    const{isChecked, setChecked} = useState(false)\n    const{message, setMessage} = useState('')\n    const{id, setId} = useState(1)\n    const handleSubmit = (event) =>{\n        event.preventDefault()\n        if(task !== \"\"){\n            setList([{id:id,value:task,completed:isChecked}])\n        }else{\n            setMessage('Please enter a task')\n        }\n                \n    }\n    return(\n        \n        <div id = \"agendaproject\" className = \"agenda_project\">\n            \n            <form className = \"agenda-form\" onSubmit = {handleSubmit}>\n                <h1 className=\"h1_agenda\">Agenda <RiCalendarTodoFill/></h1>\n            \n                    <input className = \"task_input\"\n                        type = \"text\"\n                        value = {task}\n                        placeholder = \"Enter Task\" \n                        onChange = {e=>setTask(e.target.value)}\n                        />\n                    <div className = 'button-wrapper'>\n                        <button className = \"button_add\" type = \"submit\"> Add </button>\n                        <button className = \"button_clear\" onClick = {setTask('')}> Clear </button>\n                    </div>\n            </form>\n                          \n            <div className = \"display_todo\">\n                                \n                <p>{message}</p>\n                                 \n                    {list.length < 14 ? list.map((item)=> \n                        <ul key = {item.id}>\n                                   \n                        <input type = \"Checkbox\"           \n                            name = \"isChecked\"\n                            value = {isChecked}\n                            onChange = {setChecked(!checked)}\n                            />\n                            {item.value}\n                        </ul>\n                        )  : setTask('')}\n                    {console.log(list)}\n            </div>\n            <JugPuzzle/>\n            <Main/>\n            <CurrencyExchange/>\n            <OtherConversions/>\n        </div>\n       \n    )\n}\nexport default AgendaProject"]},"metadata":{},"sourceType":"module"}