{"ast":null,"code":"var _jsxFileName = \"/Users/AngaragT/Desktop/Portfolio/src/FunComponent/Hatchways/Main.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Expand from \"./Expand\";\nimport Tag from \"./Tag\";\n\nfunction Main() {\n  _s();\n\n  const [students, setStudents] = useState([]);\n  const [search, setSearch] = useState('');\n  const [searchtag, setSearchTag] = useState(''); // const [array, setArray] = useState()\n\n  useEffect(() => {\n    fetch('https://api.hatchways.io/assessment/students').then(response => response.json()).then(response => {\n      // response['tags'] = []\n      // setArray(response)\n      response.students.map(c => response.students[response.students.indexOf(c)]['tags'] = ['']);\n      setStudents(response.students);\n    });\n  }, []); // const handleChange = (e) =>{\n  //     setTag(e.target.value)\n  // }\n\n  const handleTags = (taglist, index) => {\n    // array.tags = taglist\n    // console.log(array)\n    students[index].tags = taglist;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"display_box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"name_search\",\n    type: \"text\",\n    placeholder: \"Search by name\",\n    onChange: e => setSearch(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"tag_search\",\n    type: \"text\",\n    placeholder: \"Search by tag\",\n    onChange: e => setSearchTag(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }), students.filter(student => student.tags.join().includes(searchtag) && (student.firstName.toLowerCase().includes(search) + student.lastName.toLowerCase().includes(search) || student.firstName.toLowerCase().concat(\" \" + student.lastName.toLowerCase()).includes(search))).map(current => /*#__PURE__*/React.createElement(\"div\", {\n    key: current.id,\n    className: \"display_content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"profile_pic\",\n    src: current.pic,\n    alt: \"profile_pic\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 25\n    }\n  }, current.firstName, \" \", current.lastName), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 25\n    }\n  }, \"Email: \", current.email), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"company\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 25\n    }\n  }, \"Company: \", current.company), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"skill\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 25\n    }\n  }, \"Skill: \", current.skill), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"average\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 25\n    }\n  }, \"Average: \", current.grades.reduce((prev, current) => parseInt(prev, 10) + parseInt(current, 10)) / current.grades.length, \"%\"), /*#__PURE__*/React.createElement(Expand, {\n    grades: current.grades,\n    index: students.indexOf(current),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(AddTag, {\n    handleTags: handleTags,\n    index: students.indexOf(current),\n    currenttag: current.tags,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 25\n    }\n  }))));\n}\n\n_s(Main, \"5mQAPEkUM0lSr4Q0lD3WTixLW7Y=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/Users/AngaragT/Desktop/Portfolio/src/FunComponent/Hatchways/Main.js"],"names":["React","useEffect","useState","Expand","Tag","Main","students","setStudents","search","setSearch","searchtag","setSearchTag","fetch","then","response","json","map","c","indexOf","handleTags","taglist","index","tags","e","target","value","filter","student","join","includes","firstName","toLowerCase","lastName","concat","current","id","pic","email","company","skill","grades","reduce","prev","parseInt","length"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport Expand from \"./Expand\"\nimport Tag from \"./Tag\"\nfunction Main(){\n    const [students, setStudents] = useState([])\n    const [search, setSearch] = useState('')\n    const [searchtag, setSearchTag] = useState('')\n    // const [array, setArray] = useState()\n    useEffect(() => {\n        fetch('https://api.hatchways.io/assessment/students')\n            .then(response => response.json())\n            .then((response )=>{\n                // response['tags'] = []\n                // setArray(response)\n               \n                response.students.map(c=>response.students[response.students.indexOf(c)]['tags']=[''])\n                setStudents(response.students)\n                \n            })\n\n        \n    },[])\n\n    // const handleChange = (e) =>{\n    //     setTag(e.target.value)\n    // }\n    const handleTags = (taglist, index) =>{\n        // array.tags = taglist\n        // console.log(array)\n      \n        students[index].tags = taglist\n   \n    }\n\n    return(\n        <div className = \"display_box\">\n            <input className = \"name_search\" type = \"text\" placeholder = \"Search by name\" onChange = {e =>setSearch(e.target.value)}/>\n            <input className = \"tag_search\" type = 'text' placeholder = 'Search by tag' onChange = {e =>setSearchTag(e.target.value)}/>\n\n{/* \n                {students.filter(student => student.firstName.toLowerCase().includes(search) + student.lastName.toLowerCase().includes(search) \n                || student.firstName.toLowerCase().concat(\" \"+student.lastName.toLowerCase()).includes(search) \n                || student.tags.includes(searchtag)) */}\n\n                {/* {console.log(students.filter(student => student.firstName.toLowerCase().includes(search) + student.lastName.toLowerCase().includes(search)|| student.firstName.toLowerCase().concat(\" \"+student.lastName.toLowerCase()).includes(search)))} */}\n\n                {/* {console.log(students.filter(student => student.tags.join().includes(searchtag)))} */}\n                {students.filter(student => student.tags.join().includes(searchtag)\n                && (student.firstName.toLowerCase().includes(search)+ student.lastName.toLowerCase().includes(search)\n                || student.firstName.toLowerCase().concat(\" \"+student.lastName.toLowerCase()).includes(search))\n                ).map((current)=>\n                    <div key = {current.id} className = \"display_content\">\n                        <img className = \"profile_pic\"src = {current.pic} alt = \"profile_pic\"/> \n                        <h1 className = \"name\">{current.firstName} {current.lastName}</h1>\n                        <p className = 'email'>Email: {current.email}</p>\n                        <p className = 'company'>Company: {current.company}</p>\n                        <p className = 'skill'>Skill: {current.skill}</p>\n                        <p className = 'average'>Average: {current.grades.reduce((prev,current)=>parseInt(prev,10)+parseInt(current,10))/current.grades.length}%</p>\n                        <Expand grades = {current.grades} index = {students.indexOf(current)}/>\n\n                        <AddTag handleTags = {handleTags} index = {students.indexOf(current)} currenttag = {current.tags}/>\n                        {/* <p>{tag}</p>\n                        <input type = 'text' onChange = {handleChange} placeholder = \"Add a tag\"/> */}\n                    </div>)}\n\n        </div>\n    )\n\n\n\n}\nexport default Main"]},"metadata":{},"sourceType":"module"}