{"ast":null,"code":"/*!\n  * Bootstrap button.js v4.6.0 (https://getbootstrap.com/)\n  * Copyright 2011-2021 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)\n  * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n  */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('jquery')) : typeof define === 'function' && define.amd ? define(['jquery'], factory) : (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.Button = factory(global.jQuery));\n})(this, function ($) {\n  'use strict';\n\n  function _interopDefaultLegacy(e) {\n    return e && typeof e === 'object' && 'default' in e ? e : {\n      'default': e\n    };\n  }\n\n  var $__default = /*#__PURE__*/_interopDefaultLegacy($);\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n  }\n  /**\n   * ------------------------------------------------------------------------\n   * Constants\n   * ------------------------------------------------------------------------\n   */\n\n\n  var NAME = 'button';\n  var VERSION = '4.6.0';\n  var DATA_KEY = 'bs.button';\n  var EVENT_KEY = \".\" + DATA_KEY;\n  var DATA_API_KEY = '.data-api';\n  var JQUERY_NO_CONFLICT = $__default['default'].fn[NAME];\n  var CLASS_NAME_ACTIVE = 'active';\n  var CLASS_NAME_BUTTON = 'btn';\n  var CLASS_NAME_FOCUS = 'focus';\n  var SELECTOR_DATA_TOGGLE_CARROT = '[data-toggle^=\"button\"]';\n  var SELECTOR_DATA_TOGGLES = '[data-toggle=\"buttons\"]';\n  var SELECTOR_DATA_TOGGLE = '[data-toggle=\"button\"]';\n  var SELECTOR_DATA_TOGGLES_BUTTONS = '[data-toggle=\"buttons\"] .btn';\n  var SELECTOR_INPUT = 'input:not([type=\"hidden\"])';\n  var SELECTOR_ACTIVE = '.active';\n  var SELECTOR_BUTTON = '.btn';\n  var EVENT_CLICK_DATA_API = \"click\" + EVENT_KEY + DATA_API_KEY;\n  var EVENT_FOCUS_BLUR_DATA_API = \"focus\" + EVENT_KEY + DATA_API_KEY + \" \" + (\"blur\" + EVENT_KEY + DATA_API_KEY);\n  var EVENT_LOAD_DATA_API = \"load\" + EVENT_KEY + DATA_API_KEY;\n  /**\n   * ------------------------------------------------------------------------\n   * Class Definition\n   * ------------------------------------------------------------------------\n   */\n\n  var Button = /*#__PURE__*/function () {\n    function Button(element) {\n      this._element = element;\n      this.shouldAvoidTriggerChange = false;\n    } // Getters\n\n\n    var _proto = Button.prototype; // Public\n\n    _proto.toggle = function toggle() {\n      var triggerChangeEvent = true;\n      var addAriaPressed = true;\n      var rootElement = $__default['default'](this._element).closest(SELECTOR_DATA_TOGGLES)[0];\n\n      if (rootElement) {\n        var input = this._element.querySelector(SELECTOR_INPUT);\n\n        if (input) {\n          if (input.type === 'radio') {\n            if (input.checked && this._element.classList.contains(CLASS_NAME_ACTIVE)) {\n              triggerChangeEvent = false;\n            } else {\n              var activeElement = rootElement.querySelector(SELECTOR_ACTIVE);\n\n              if (activeElement) {\n                $__default['default'](activeElement).removeClass(CLASS_NAME_ACTIVE);\n              }\n            }\n          }\n\n          if (triggerChangeEvent) {\n            // if it's not a radio button or checkbox don't add a pointless/invalid checked property to the input\n            if (input.type === 'checkbox' || input.type === 'radio') {\n              input.checked = !this._element.classList.contains(CLASS_NAME_ACTIVE);\n            }\n\n            if (!this.shouldAvoidTriggerChange) {\n              $__default['default'](input).trigger('change');\n            }\n          }\n\n          input.focus();\n          addAriaPressed = false;\n        }\n      }\n\n      if (!(this._element.hasAttribute('disabled') || this._element.classList.contains('disabled'))) {\n        if (addAriaPressed) {\n          this._element.setAttribute('aria-pressed', !this._element.classList.contains(CLASS_NAME_ACTIVE));\n        }\n\n        if (triggerChangeEvent) {\n          $__default['default'](this._element).toggleClass(CLASS_NAME_ACTIVE);\n        }\n      }\n    };\n\n    _proto.dispose = function dispose() {\n      $__default['default'].removeData(this._element, DATA_KEY);\n      this._element = null;\n    } // Static\n    ;\n\n    Button._jQueryInterface = function _jQueryInterface(config, avoidTriggerChange) {\n      return this.each(function () {\n        var $element = $__default['default'](this);\n        var data = $element.data(DATA_KEY);\n\n        if (!data) {\n          data = new Button(this);\n          $element.data(DATA_KEY, data);\n        }\n\n        data.shouldAvoidTriggerChange = avoidTriggerChange;\n\n        if (config === 'toggle') {\n          data[config]();\n        }\n      });\n    };\n\n    _createClass(Button, null, [{\n      key: \"VERSION\",\n      get: function get() {\n        return VERSION;\n      }\n    }]);\n\n    return Button;\n  }();\n  /**\n   * ------------------------------------------------------------------------\n   * Data Api implementation\n   * ------------------------------------------------------------------------\n   */\n\n\n  $__default['default'](document).on(EVENT_CLICK_DATA_API, SELECTOR_DATA_TOGGLE_CARROT, function (event) {\n    var button = event.target;\n    var initialButton = button;\n\n    if (!$__default['default'](button).hasClass(CLASS_NAME_BUTTON)) {\n      button = $__default['default'](button).closest(SELECTOR_BUTTON)[0];\n    }\n\n    if (!button || button.hasAttribute('disabled') || button.classList.contains('disabled')) {\n      event.preventDefault(); // work around Firefox bug #1540995\n    } else {\n      var inputBtn = button.querySelector(SELECTOR_INPUT);\n\n      if (inputBtn && (inputBtn.hasAttribute('disabled') || inputBtn.classList.contains('disabled'))) {\n        event.preventDefault(); // work around Firefox bug #1540995\n\n        return;\n      }\n\n      if (initialButton.tagName === 'INPUT' || button.tagName !== 'LABEL') {\n        Button._jQueryInterface.call($__default['default'](button), 'toggle', initialButton.tagName === 'INPUT');\n      }\n    }\n  }).on(EVENT_FOCUS_BLUR_DATA_API, SELECTOR_DATA_TOGGLE_CARROT, function (event) {\n    var button = $__default['default'](event.target).closest(SELECTOR_BUTTON)[0];\n    $__default['default'](button).toggleClass(CLASS_NAME_FOCUS, /^focus(in)?$/.test(event.type));\n  });\n  $__default['default'](window).on(EVENT_LOAD_DATA_API, function () {\n    // ensure correct active class is set to match the controls' actual values/states\n    // find all checkboxes/readio buttons inside data-toggle groups\n    var buttons = [].slice.call(document.querySelectorAll(SELECTOR_DATA_TOGGLES_BUTTONS));\n\n    for (var i = 0, len = buttons.length; i < len; i++) {\n      var button = buttons[i];\n      var input = button.querySelector(SELECTOR_INPUT);\n\n      if (input.checked || input.hasAttribute('checked')) {\n        button.classList.add(CLASS_NAME_ACTIVE);\n      } else {\n        button.classList.remove(CLASS_NAME_ACTIVE);\n      }\n    } // find all button toggles\n\n\n    buttons = [].slice.call(document.querySelectorAll(SELECTOR_DATA_TOGGLE));\n\n    for (var _i = 0, _len = buttons.length; _i < _len; _i++) {\n      var _button = buttons[_i];\n\n      if (_button.getAttribute('aria-pressed') === 'true') {\n        _button.classList.add(CLASS_NAME_ACTIVE);\n      } else {\n        _button.classList.remove(CLASS_NAME_ACTIVE);\n      }\n    }\n  });\n  /**\n   * ------------------------------------------------------------------------\n   * jQuery\n   * ------------------------------------------------------------------------\n   */\n\n  $__default['default'].fn[NAME] = Button._jQueryInterface;\n  $__default['default'].fn[NAME].Constructor = Button;\n\n  $__default['default'].fn[NAME].noConflict = function () {\n    $__default['default'].fn[NAME] = JQUERY_NO_CONFLICT;\n    return Button._jQueryInterface;\n  };\n\n  return Button;\n});","map":{"version":3,"sources":["../src/button.js"],"names":["NAME","VERSION","DATA_KEY","EVENT_KEY","DATA_API_KEY","JQUERY_NO_CONFLICT","$","CLASS_NAME_ACTIVE","CLASS_NAME_BUTTON","CLASS_NAME_FOCUS","SELECTOR_DATA_TOGGLE_CARROT","SELECTOR_DATA_TOGGLES","SELECTOR_DATA_TOGGLE","SELECTOR_DATA_TOGGLES_BUTTONS","SELECTOR_INPUT","SELECTOR_ACTIVE","SELECTOR_BUTTON","EVENT_CLICK_DATA_API","EVENT_FOCUS_BLUR_DATA_API","EVENT_LOAD_DATA_API","Button","toggle","triggerChangeEvent","addAriaPressed","rootElement","input","activeElement","dispose","_jQueryInterface","$element","data","config","button","event","initialButton","inputBtn","buttons","document","i","len"],"mappings":"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","sourcesContent":["/**\n * --------------------------------------------------------------------------\n * Bootstrap (v4.6.0): button.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport $ from 'jquery'\n\n/**\n * ------------------------------------------------------------------------\n * Constants\n * ------------------------------------------------------------------------\n */\n\nconst NAME = 'button'\nconst VERSION = '4.6.0'\nconst DATA_KEY = 'bs.button'\nconst EVENT_KEY = `.${DATA_KEY}`\nconst DATA_API_KEY = '.data-api'\nconst JQUERY_NO_CONFLICT = $.fn[NAME]\n\nconst CLASS_NAME_ACTIVE = 'active'\nconst CLASS_NAME_BUTTON = 'btn'\nconst CLASS_NAME_FOCUS = 'focus'\n\nconst SELECTOR_DATA_TOGGLE_CARROT = '[data-toggle^=\"button\"]'\nconst SELECTOR_DATA_TOGGLES = '[data-toggle=\"buttons\"]'\nconst SELECTOR_DATA_TOGGLE = '[data-toggle=\"button\"]'\nconst SELECTOR_DATA_TOGGLES_BUTTONS = '[data-toggle=\"buttons\"] .btn'\nconst SELECTOR_INPUT = 'input:not([type=\"hidden\"])'\nconst SELECTOR_ACTIVE = '.active'\nconst SELECTOR_BUTTON = '.btn'\n\nconst EVENT_CLICK_DATA_API = `click${EVENT_KEY}${DATA_API_KEY}`\nconst EVENT_FOCUS_BLUR_DATA_API = `focus${EVENT_KEY}${DATA_API_KEY} ` +\n                          `blur${EVENT_KEY}${DATA_API_KEY}`\nconst EVENT_LOAD_DATA_API = `load${EVENT_KEY}${DATA_API_KEY}`\n\n/**\n * ------------------------------------------------------------------------\n * Class Definition\n * ------------------------------------------------------------------------\n */\n\nclass Button {\n  constructor(element) {\n    this._element = element\n    this.shouldAvoidTriggerChange = false\n  }\n\n  // Getters\n\n  static get VERSION() {\n    return VERSION\n  }\n\n  // Public\n\n  toggle() {\n    let triggerChangeEvent = true\n    let addAriaPressed = true\n    const rootElement = $(this._element).closest(SELECTOR_DATA_TOGGLES)[0]\n\n    if (rootElement) {\n      const input = this._element.querySelector(SELECTOR_INPUT)\n\n      if (input) {\n        if (input.type === 'radio') {\n          if (input.checked && this._element.classList.contains(CLASS_NAME_ACTIVE)) {\n            triggerChangeEvent = false\n          } else {\n            const activeElement = rootElement.querySelector(SELECTOR_ACTIVE)\n\n            if (activeElement) {\n              $(activeElement).removeClass(CLASS_NAME_ACTIVE)\n            }\n          }\n        }\n\n        if (triggerChangeEvent) {\n          // if it's not a radio button or checkbox don't add a pointless/invalid checked property to the input\n          if (input.type === 'checkbox' || input.type === 'radio') {\n            input.checked = !this._element.classList.contains(CLASS_NAME_ACTIVE)\n          }\n\n          if (!this.shouldAvoidTriggerChange) {\n            $(input).trigger('change')\n          }\n        }\n\n        input.focus()\n        addAriaPressed = false\n      }\n    }\n\n    if (!(this._element.hasAttribute('disabled') || this._element.classList.contains('disabled'))) {\n      if (addAriaPressed) {\n        this._element.setAttribute('aria-pressed', !this._element.classList.contains(CLASS_NAME_ACTIVE))\n      }\n\n      if (triggerChangeEvent) {\n        $(this._element).toggleClass(CLASS_NAME_ACTIVE)\n      }\n    }\n  }\n\n  dispose() {\n    $.removeData(this._element, DATA_KEY)\n    this._element = null\n  }\n\n  // Static\n\n  static _jQueryInterface(config, avoidTriggerChange) {\n    return this.each(function () {\n      const $element = $(this)\n      let data = $element.data(DATA_KEY)\n\n      if (!data) {\n        data = new Button(this)\n        $element.data(DATA_KEY, data)\n      }\n\n      data.shouldAvoidTriggerChange = avoidTriggerChange\n\n      if (config === 'toggle') {\n        data[config]()\n      }\n    })\n  }\n}\n\n/**\n * ------------------------------------------------------------------------\n * Data Api implementation\n * ------------------------------------------------------------------------\n */\n\n$(document)\n  .on(EVENT_CLICK_DATA_API, SELECTOR_DATA_TOGGLE_CARROT, event => {\n    let button = event.target\n    const initialButton = button\n\n    if (!$(button).hasClass(CLASS_NAME_BUTTON)) {\n      button = $(button).closest(SELECTOR_BUTTON)[0]\n    }\n\n    if (!button || button.hasAttribute('disabled') || button.classList.contains('disabled')) {\n      event.preventDefault() // work around Firefox bug #1540995\n    } else {\n      const inputBtn = button.querySelector(SELECTOR_INPUT)\n\n      if (inputBtn && (inputBtn.hasAttribute('disabled') || inputBtn.classList.contains('disabled'))) {\n        event.preventDefault() // work around Firefox bug #1540995\n        return\n      }\n\n      if (initialButton.tagName === 'INPUT' || button.tagName !== 'LABEL') {\n        Button._jQueryInterface.call($(button), 'toggle', initialButton.tagName === 'INPUT')\n      }\n    }\n  })\n  .on(EVENT_FOCUS_BLUR_DATA_API, SELECTOR_DATA_TOGGLE_CARROT, event => {\n    const button = $(event.target).closest(SELECTOR_BUTTON)[0]\n    $(button).toggleClass(CLASS_NAME_FOCUS, /^focus(in)?$/.test(event.type))\n  })\n\n$(window).on(EVENT_LOAD_DATA_API, () => {\n  // ensure correct active class is set to match the controls' actual values/states\n\n  // find all checkboxes/readio buttons inside data-toggle groups\n  let buttons = [].slice.call(document.querySelectorAll(SELECTOR_DATA_TOGGLES_BUTTONS))\n  for (let i = 0, len = buttons.length; i < len; i++) {\n    const button = buttons[i]\n    const input = button.querySelector(SELECTOR_INPUT)\n    if (input.checked || input.hasAttribute('checked')) {\n      button.classList.add(CLASS_NAME_ACTIVE)\n    } else {\n      button.classList.remove(CLASS_NAME_ACTIVE)\n    }\n  }\n\n  // find all button toggles\n  buttons = [].slice.call(document.querySelectorAll(SELECTOR_DATA_TOGGLE))\n  for (let i = 0, len = buttons.length; i < len; i++) {\n    const button = buttons[i]\n    if (button.getAttribute('aria-pressed') === 'true') {\n      button.classList.add(CLASS_NAME_ACTIVE)\n    } else {\n      button.classList.remove(CLASS_NAME_ACTIVE)\n    }\n  }\n})\n\n/**\n * ------------------------------------------------------------------------\n * jQuery\n * ------------------------------------------------------------------------\n */\n\n$.fn[NAME] = Button._jQueryInterface\n$.fn[NAME].Constructor = Button\n$.fn[NAME].noConflict = () => {\n  $.fn[NAME] = JQUERY_NO_CONFLICT\n  return Button._jQueryInterface\n}\n\nexport default Button\n"]},"metadata":{},"sourceType":"script"}